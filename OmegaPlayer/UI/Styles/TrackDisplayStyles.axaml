<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:OmegaPlayer.UI.Controls.TrackDisplay"
        xmlns:vm="using:OmegaPlayer.Features.Library.ViewModels"
		xmlns:helpers="using:OmegaPlayer.UI.Controls.Helpers"
        xmlns:models="using:OmegaPlayer.Features.Library.Models"
		xmlns:attached="using:OmegaPlayer.UI.Attached"
		xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions">


	<!-- Add the behavior that initializes the attached properties -->
	<Style Selector="controls|TrackDisplayControl">
		<Setter Property="Template">
			<ControlTemplate>
				<ItemsControl Name="PART_ItemsControl"
                              ItemsSource="{TemplateBinding ItemsSource}">
					<i:Interaction.Behaviors>
						<attached:TrackDisplayHostBehavior />
					</i:Interaction.Behaviors>
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
				</ItemsControl>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- Track Context Menu Resource -->

	<!-- Base Style for TrackDisplayControl -->
	<Style Selector="controls|TrackDisplayControl">
		<Setter Property="Template">
			<ControlTemplate>
				<ItemsControl Name="PART_ItemsControl"
							ItemsSource="{TemplateBinding ItemsSource}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
				</ItemsControl>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- Card View Style -->
	<Style Selector="controls|TrackDisplayControl[ViewType=Card]">
		<Setter Property="Template">
			<ControlTemplate>
				<ScrollViewer Name="TrackScrollviewer">
					<ItemsControl Name="PART_ItemsControl"
								ItemsSource="{TemplateBinding ItemsSource}">
						<i:Interaction.Behaviors>
							<attached:TrackDisplayHostBehavior />
						</i:Interaction.Behaviors>
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>

						<ItemsControl.ItemTemplate>
							<DataTemplate x:DataType="models:TrackDisplayModel">
								<Border Name="TrackOuterContainer">
									<StackPanel Classes="trackPanel">
										<Border Width="130" Height="200"
												Padding="10"
												CornerRadius="5"
												Background="Transparent"
												Name="TrackContainer"
												DragDrop.AllowDrop="True"
												IsHitTestVisible="True"
												Classes="trackPanel contextMenu"
												Classes.playing="{Binding IsCurrentlyPlaying}"
												Classes.dragging="{Binding $parent[controls:TrackDisplayControl].((vm:DetailsViewModel)DataContext).DraggedTrack}, 
												Converter={x:Static ObjectConverters.IsNotNull}}">
											<StackPanel Orientation="Vertical" >
												<Grid>
													<Border CornerRadius="5"
															ClipToBounds="True"
															Background="Transparent">
														<Image Width="110" Height="110"
														   Source="{Binding Thumbnail}"
														   Classes="trackImage"/>
													</Border>

													<!-- Overlay Controls (visible on hover) -->
													<Grid>
														<Grid.Opacity>
															<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
																<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Grid, AncestorLevel=1}"/>
																<Binding Path="IsSelected"/>
															</MultiBinding>
														</Grid.Opacity>

														<!-- Selection CheckBox -->
														<CheckBox Classes="trackSelectionBox"
															 VerticalAlignment="Top"
															 HorizontalAlignment="Left"
															 Margin="5 0 0 0"/>

														<Button Classes="trackPlayButton"
																VerticalAlignment="Bottom"
																HorizontalAlignment="Right"
																Margin="5"/>

														<Button Grid.Column="4"
																VerticalAlignment="Bottom"
																HorizontalAlignment="Left"
																Margin="5"
																Classes="likeButton"/>
													</Grid>
												</Grid>

												<StackPanel Width="110"
															HorizontalAlignment="Center"
															Spacing="2"
															Margin="0,5,0,0">
													<helpers:CustomTextBlock
														Text="{Binding Title}"
														Classes="scrollingText cardText"/>

													<!-- For Card View -->
													<helpers:ScrollingArtistsList
														Artists="{Binding Artists}"
														ArtistClickCommand="{attached:TrackDisplayHostCommand OpenArtistCommand}"
														Classes="cardText"
														Margin="0,2,0,0"/>
													<Button
														Grid.Column="5"
														Classes="albumButton">
														<helpers:CustomTextBlock Classes="scrollingText cardText" Text="{Binding AlbumTitle}"/>
													</Button>
												</StackPanel>

											</StackPanel>
										</Border>
										<!-- Add drop indicator -->
										<Border IsVisible="{Binding ShowDropIndicator}"
												ZIndex="999"
												Classes="dropIndicator"
												Grid.Row="1"/>
									</StackPanel>
								</Border>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</ScrollViewer>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- List View Style -->
	<Style Selector="controls|TrackDisplayControl[ViewType=List]">
		<Style.Resources>
			<x:Double x:Key="ListItemHeight">60</x:Double>
			<x:Double x:Key="ListImageSize">50</x:Double>
		</Style.Resources>
		<Setter Property="Template">
			<ControlTemplate>
				<ScrollViewer Name="TrackScrollviewer">
					<ItemsControl Name="PART_ItemsControl"
								ItemsSource="{TemplateBinding ItemsSource}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<StackPanel />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>

						<ItemsControl.ItemTemplate>
							<DataTemplate x:DataType="models:TrackDisplayModel">
								<Border Name="TrackOuterContainer">
									<StackPanel>
										<Border Height="{StaticResource ListItemHeight}"
												CornerRadius="5"
												Name="TrackContainer"
												DragDrop.AllowDrop="True"
												Classes="trackPanel contextMenu"
												Classes.playing="{Binding IsCurrentlyPlaying}"
												Classes.dragging="{Binding $parent[controls:TrackDisplayControl].((vm:DetailsViewModel)DataContext).DraggedTrack}, 
												Converter={x:Static ObjectConverters.IsNotNull}}"
												IsHitTestVisible="True"
												Background="{DynamicResource MainColor}">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto"/>
													<!-- Checkbox -->
													<ColumnDefinition Width="Auto"/>
													<!-- Play Button -->
													<ColumnDefinition Width="Auto"/>
													<!-- Image -->
													<ColumnDefinition Width="3*"/>
													<!-- Title/Artists -->
													<ColumnDefinition Width="Auto"/>
													<!-- Like Button -->
													<ColumnDefinition Width="2*"/>
													<!-- Album -->
													<ColumnDefinition Width="1*"/>
													<!-- Genre -->
													<ColumnDefinition Width="Auto"/>
													<!-- Duration -->
												</Grid.ColumnDefinitions>
												<CheckBox Grid.Column="0"
														Classes="trackSelectionBox"
														Margin="5,0">
													<CheckBox.Opacity>
														<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
															<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Border, AncestorLevel=1}"/>
															<Binding Path="IsSelected"/>
														</MultiBinding>
													</CheckBox.Opacity>
												</CheckBox>

												<Button Grid.Column="1"
														Classes="trackPlayButton"
														Width="25" Height="25">
													<Button.Opacity>
														<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
															<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Border, AncestorLevel=1}"/>
															<Binding Path="IsSelected"/>
														</MultiBinding>
													</Button.Opacity>
												</Button>

												<Image Grid.Column="2"
													   Classes="trackImage"
													   Width="{StaticResource ListImageSize}"
													   Height="{StaticResource ListImageSize}"
													   Margin="5,0"
													   Source="{Binding Thumbnail}"/>

												<StackPanel Grid.Column="3"
															Margin="10,0"
															ClipToBounds="True"
															VerticalAlignment="Center">
													<helpers:CustomTextBlock
														Text="{Binding Title}"
														ClipToBounds="False"
														Classes="scrollingText.list"/>
													<helpers:ScrollingArtistsList
														HorizontalAlignment="Left"
														Artists="{Binding Artists}"
														ArtistClickCommand="{attached:TrackDisplayHostCommand OpenArtistCommand}"
														Margin="0,8,0,0"/>
												</StackPanel>

												<Button Grid.Column="4"
														Margin="5"
														Classes="likeButton"
														VerticalAlignment="Center">
													<Button.Opacity>
														<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
															<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Border, AncestorLevel=1}"/>
															<Binding Path="IsSelected"/>
														</MultiBinding>
													</Button.Opacity>
												</Button>

												<Button Grid.Column="5"
														Classes="albumButton">
													<helpers:CustomTextBlock
														Text="{Binding AlbumTitle}"
														Classes="scrollingText listText">
													</helpers:CustomTextBlock>
												</Button>

												<Button Grid.Column="6"
														Classes="genreButton">
													<helpers:CustomTextBlock Text="{Binding Genre}" Classes="scrollingText listText"/>
												</Button>
												<TextBlock Grid.Column="7"
														 Classes="trackDuration"/>
											</Grid>
										</Border>
										<!-- Add drop indicator -->
										<Border IsVisible="{Binding ShowDropIndicator}"
												ZIndex="999"
												Classes="dropIndicator"
												Grid.Row="1"/>
									</StackPanel>
								</Border>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</ScrollViewer>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- Image View Style -->
	<Style Selector="controls|TrackDisplayControl[ViewType=Image]">
		<Setter Property="Template">
			<ControlTemplate>
				<ScrollViewer Name="TrackScrollviewer">
					<ItemsControl Name="PART_ItemsControl"
								ItemsSource="{TemplateBinding ItemsSource}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel/>
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>

						<ItemsControl.ItemTemplate>
							<DataTemplate x:DataType="models:TrackDisplayModel">
								<Border Name="TrackOuterContainer">
									<StackPanel>
										<Border Name="TrackContainer"
												DragDrop.AllowDrop="True"
												IsHitTestVisible="True"
												Classes="trackPanel contextMenu"
												Classes.playing="{Binding IsCurrentlyPlaying}"
												Classes.dragging="{Binding $parent[controls:TrackDisplayControl].((vm:DetailsViewModel)DataContext).DraggedTrack}, 
												Converter={x:Static ObjectConverters.IsNotNull}}">
											<Grid Width="140" Height="140"
												  Margin="5">
												<Image Classes="trackImage"
													   Source="{Binding Thumbnail}"/>

												<Grid Classes="fade">
													<Grid.Opacity>
														<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
															<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Grid, AncestorLevel=1}"/>
															<Binding Path="IsSelected"/>
														</MultiBinding>
													</Grid.Opacity>

													<TextBlock Classes="trackTitle"
															 VerticalAlignment="Bottom"
															 HorizontalAlignment="Left"
															 Margin="10,0,0,10"
															 FontSize="14"
															 Foreground="White"
															 TextWrapping="Wrap"
															 MaxWidth="180"/>

													<CheckBox Classes="trackSelectionBox"
															 VerticalAlignment="Top"
															 HorizontalAlignment="Left"
															 Margin="5,0,0,0"/>

													<StackPanel Orientation="Vertical"
																VerticalAlignment="Top"
																HorizontalAlignment="Right">

														<Button Classes="trackPlayButton"
																Margin="0"/>

														<Button Margin="0 0 0 0"
																Classes="likeButton"/>
													</StackPanel>
												</Grid>
											</Grid>
										</Border>
										<!-- Add drop indicator -->
										<Border IsVisible="{Binding ShowDropIndicator}"
												ZIndex="999"
												Classes="dropIndicator"
												Grid.Row="1"/>
									</StackPanel>
								</Border>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</ScrollViewer>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- Round Image View Style -->
	<Style Selector="controls|TrackDisplayControl[ViewType=RoundImage]">
		<Setter Property="Template">
			<ControlTemplate>
				<ScrollViewer Name="TrackScrollviewer">
					<ItemsControl Name="PART_ItemsControl"
								ItemsSource="{TemplateBinding ItemsSource}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel/>
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>

						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="models:TrackDisplayModel">
								<Border Name="TrackOuterContainer">
									<StackPanel>
										<Border  Name="TrackContainer"
												 CornerRadius="5"
												 DragDrop.AllowDrop="True"
												 IsHitTestVisible="True"
												 Classes="trackPanel contextMenu"
												 Classes.playing="{Binding IsCurrentlyPlaying}"
												 Classes.dragging="{Binding $parent[controls:TrackDisplayControl].((vm:DetailsViewModel)DataContext).DraggedTrack}, 
												 Converter={x:Static ObjectConverters.IsNotNull}}">
											<StackPanel Width="120" Height="160"
														Name="TrackPanel"
														Spacing="8"
														HorizontalAlignment="Center"
														Classes="trackPanel">
												<!-- Track Image Container -->
												<Grid Width="120" Height="120"
													  HorizontalAlignment="Center">
													<!-- Circular Clip for Image -->
													<Ellipse Width="120" Height="120">
														<Ellipse.Fill>
															<ImageBrush Source="{Binding Thumbnail}"
																		Stretch="UniformToFill"/>
														</Ellipse.Fill>
													</Ellipse>

													<!-- Overlay Controls (visible on hover) -->
													<Grid>
														<Grid.Opacity>
															<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
																<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Grid, AncestorLevel=1}"/>
																<Binding Path="IsSelected"/>
															</MultiBinding>
														</Grid.Opacity>

														<!-- Selection CheckBox -->
														<CheckBox Classes="trackSelectionBox"
															 VerticalAlignment="Center"
															 HorizontalAlignment="Left"
															 Margin="5 0 0 0"/>

														<Button Classes="trackPlayButton"
																VerticalAlignment="Center"
																HorizontalAlignment="Right"
																Margin="0"/>

														<Button Grid.Column="4"
																VerticalAlignment="Bottom"
																HorizontalAlignment="Center"
																Margin="0"
																Classes="likeButton"/>
													</Grid>
												</Grid>

												<!-- Title (always visible, centered below image) -->
												<Border Width="110"
														Height="20"
														HorizontalAlignment="Center"
														VerticalAlignment="Top"
														ClipToBounds="True"
														x:Name="TitleContainer">
													<helpers:CustomTextBlock
														Text="{Binding Title}"
														Classes="scrollingText">
													</helpers:CustomTextBlock>
												</Border>
											</StackPanel>
										</Border>
										<!-- Add drop indicator -->
										<Border IsVisible="{Binding ShowDropIndicator}"
												ZIndex="999"
												Classes="dropIndicator"
												Grid.Row="1"/>
									</StackPanel>
								</Border>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</ScrollViewer>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- Common Element Styles -->

	<!-- Play Button Style -->
	<Style Selector="Button.trackPlayButton" x:DataType="models:TrackDisplayModel">
		<Setter Property="Width" Value="30"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="Content">
			<Template>
				<PathIcon Data="{StaticResource PlayIcon}"
						  Width="15" Height="15" Margin="0 2 0 0"
						  Foreground="{DynamicResource AccentColor}"/>
			</Template>
		</Setter>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="CornerRadius" Value="25"/>
		<Setter Property="IsVisible" Value="{Binding !$parent[ItemsControl].((vm:DetailsViewModel)DataContext).IsReorderMode}"/>
		<Setter Property="Command" Value="{attached:TrackDisplayHostCommand PlayTrackCommand}"/>
		<Setter Property="CommandParameter" Value="{Binding}"/>
	</Style>

	<Style Selector="Button.trackPlayButton:pointerover /template/ ContentPresenter" >
		<Setter Property="Background" Value="{DynamicResource TextColor}"/>
		<Setter Property="CornerRadius" Value="25"/>
	</Style>

	<!-- Checkbox Style -->
	<Style Selector="CheckBox.trackSelectionBox" x:DataType="models:TrackDisplayModel">
		<Setter Property="IsChecked" Value="{Binding IsSelected, Mode=TwoWay}"/>
		<Setter Property="IsVisible" Value="{Binding !$parent[ItemsControl].((vm:DetailsViewModel)DataContext).IsReorderMode}"/>
		<Setter Property="Command" Value="{attached:TrackDisplayHostCommand TrackSelectionCommand}"/>
		<Setter Property="CommandParameter" Value="{Binding}"/>
	</Style>

	<Style Selector="CheckBox:unchecked /template/ Border#NormalRectangle">
		<Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
	</Style>
	<Style Selector="CheckBox:pointerover /template/ Border#NormalRectangle">
		<Setter Property="BorderBrush" Value="Gray" />
	</Style>
	<Style Selector="CheckBox:checked /template/ Border#NormalRectangle">
		<Setter Property="Background" Value="{DynamicResource AccentColor}" />
		<Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
	</Style>
	<Style Selector="CheckBox:checked:pointerover /template/ Border#NormalRectangle">
		<Setter Property="Background" Value="Gray" />
		<Setter Property="BorderBrush" Value="Gray"/>
	</Style>

	<!-- Track Title Style -->
	<Style Selector="TextBlock.trackTitle" x:DataType="models:TrackDisplayModel">
		<Setter Property="Text" Value="{Binding Title}"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
	</Style>

	<Style Selector="Grid.fade" >
		<Setter Property="Background" Value="{StaticResource FadingBlack}"/>
	</Style>

	<!-- Scrolling Text Style -->
	<Style Selector="helpers|CustomTextBlock.scrollingText">
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="TextTrimming" Value="None"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>

	<Style Selector="helpers|CustomTextBlock.scrollingText:pointerover" x:DataType="models:TrackDisplayModel">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
	</Style>
	<!-- Helper list Style -->
	<Style Selector="helpers|CustomTextBlock.scrollingText.list" x:DataType="models:TrackDisplayModel">
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="TextTrimming" Value="None"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Text" Value="{Binding Title}"/>
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>

	<!-- Artists ItemsControl Style -->
	<Style Selector="helpers|CustomTextBlock.artistsText" x:DataType="models:TrackDisplayModel">
		<Setter Property="Text" Value="{Binding Artists}"/>
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="TextTrimming" Value="None"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Cursor" Value="Hand"/>
	</Style>

	<!-- Album Button Style -->
	<Style Selector="Button.albumButton" x:DataType="models:TrackDisplayModel">
		<Setter Property="Command" Value="{attached:TrackDisplayHostCommand OpenAlbumCommand}"/>
		<Setter Property="CommandParameter" Value="{Binding AlbumID}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="FontSize" Value="11"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style>

	<Style Selector="Button.albumButton:pointerover /template/ ContentPresenter">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
	</Style>

	<!-- Like Button Style -->
	<Style Selector="Button.likeButton" x:DataType="models:TrackDisplayModel">
		<Setter Property="Command" Value="{attached:TrackDisplayHostCommand ToggleTrackLikeCommand}"/>
		<Setter Property="CommandParameter" Value="{Binding}"/>
		<Setter Property="IsVisible" Value="{Binding !$parent[ItemsControl].((vm:DetailsViewModel)DataContext).IsReorderMode}"/>
		<Setter Property="Width" Value="30"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="CornerRadius" Value="25"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Content">
			<Template>
				<PathIcon Data="{Binding LikeIcon}"
						  Width="20" Height="20" Margin="0 3 0 0"
						  Foreground="{DynamicResource AccentColor}"/>
			</Template>
		</Setter>
	</Style>

	<Style Selector="Button.likeButton:pointerover /template/ ContentPresenter" x:DataType="models:TrackDisplayModel">
		<Setter Property="Background" Value="{DynamicResource TextColor}"/>
		<Setter Property="BorderThickness" Value="1"/>
	</Style>

	<!-- Track Duration Style -->
	<Style Selector="TextBlock.trackDuration" x:DataType="models:TrackDisplayModel">
		<Setter Property="Text" Value="{Binding Duration, StringFormat=\{0:mm\\:ss\}}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="5,0"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>

	<!-- Genre Button Style -->
	<Style Selector="Button.genreButton" x:DataType="models:TrackDisplayModel">
		<Setter Property="Command" Value="{attached:TrackDisplayHostCommand OpenGenreCommand}"/>
		<Setter Property="CommandParameter" Value="{Binding Genre}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="FontSize" Value="11"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style>

	<Style Selector="Button.genreButton:pointerover /template/ ContentPresenter">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
	</Style>

	<!-- Track Image Style -->
	<Style Selector="Image.trackImage">
		<Setter Property="Stretch" Value="UniformToFill"/>
	</Style>

	<!-- Card Text Style -->
	<Style Selector="helpers|CustomTextBlock.cardText">
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Width" Value="110"/>
	</Style>

	<!-- Card Artists specific style -->
	<Style Selector="ItemsControl.cardArtists">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Width" Value="110"/>
		<Setter Property="Margin" Value="0,2"/>
	</Style>

	<!-- Additional style to ensure button stays transparent -->
	<Style Selector="Button:pointerover">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
	</Style>

	<Style Selector="helpers|ScrollingArtistsList.cardText">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="Width" Value="110"/>
	</Style>

	<!-- Modify the Artists List style similarly -->
	<Style Selector="helpers|ScrollingArtistsList">
		<Setter Property="ArtistClickCommand" Value="{attached:TrackDisplayHostCommand OpenArtistCommand}"/>
	</Style>

	<!-- Track panel style -->
	<Style Selector="Border.trackPanel">
		<Setter Property="ClipToBounds" Value="True"/>
		<Setter Property="Background" Value="{DynamicResource MainColor}"/>
		<Setter Property="Margin" Value="3"/>
		<Setter Property="Transitions">
			<Transitions>
				<BrushTransition Property="Background" Duration="0:0:0.1"/>
				<DoubleTransition Property="Opacity" Duration="0:0:0.1"/>
			</Transitions>
		</Setter>
	</Style>
	<Style Selector="Border.trackPanel:pointerover" >
		<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
	</Style>

	<!-- Track Stackpanel style -->
	<Style Selector="StackPanel.trackPanel" >
		<Setter Property="ClipToBounds" Value="True"/>
	</Style>

	<!-- Currently Playing Track Style -->
	<Style Selector="Border.playing">
		<Setter Property="Background" Value="{DynamicResource AccentColor}"/>
	</Style>
	<Style Selector="Border.playing:pointerover">
		<Setter Property="Background" Value="{DynamicResource AccentColor}"/>
	</Style>

	<!-- Text color -->
	<Style Selector="helpers|CustomTextBlock">
		<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
	</Style>

	<Style Selector="TextBlock">
		<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
	</Style>

	<Style Selector="Button">
		<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
	</Style>

	<!-- Drag and Drop Style -->
	<Style Selector="Border.trackPanel.dragging">
		<Setter Property="Opacity" Value="0.6"/>
		<Setter Property="Background" Value="{DynamicResource AccentColor}"/>
		<Setter Property="ZIndex" Value="1000"/>
	</Style>

	<Style Selector="Border.dropIndicator">
		<Setter Property="Height" Value="2"/>
		<Setter Property="Background" Value="{DynamicResource AccentColor}"/>
		<Setter Property="Margin" Value="0,2"/>
		<Setter Property="ZIndex" Value="999"/>
	</Style>

	<!-- outer container style -->
	<Style Selector="Border[Name=TrackOuterContainer]">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="DragDrop.AllowDrop" Value="True"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="0"/>
	</Style>

	<!-- Context Menu Style -->
	<Style Selector="Border.contextMenu" x:DataType="models:TrackDisplayModel">
		<Setter Property="ContextMenu">
			<ContextMenu DataContext="{Binding}">
				<MenuItem Header="Play"
						  Command="{attached:TrackDisplayHostCommand PlayTrackCommand}"
						  CommandParameter="{Binding}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource PlayIcon}"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Add as Next"
						  Command="{attached:TrackDisplayHostCommand AddAsNextTracksCommand}"
						  CommandParameter="{Binding}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource AddAsNextTrackIcon}"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Add to Queue"
						  Command="{attached:TrackDisplayHostCommand AddToQueueCommand}"
						  CommandParameter="{Binding}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource AddTrackToQueueIcon}"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Header="Go to Artist"
						  Command="{attached:TrackDisplayHostCommand OpenArtistCommand}"
						  CommandParameter="{Binding AlbumID}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource ArtistIconV2}"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Go to Album"
						  Command="{attached:TrackDisplayHostCommand OpenAlbumCommand}"
						  CommandParameter="{Binding AlbumID}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource AlbumIcon}"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Go to Genre"
						  Command="{attached:TrackDisplayHostCommand OpenGenreCommand}"
						  CommandParameter="{Binding AlbumID}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource GenreIconV2}"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Header="Add to Playlist"
						  Command="{attached:TrackDisplayHostCommand ShowPlaylistSelectionDialogCommand}"
						  CommandParameter="{Binding}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource PlaylistIcon}"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Remove from Playlist"
						  IsVisible="{Binding $parent[UserControl].((vm:DetailsViewModel)DataContext).IsPlaylistContent}"
						  Command="{attached:TrackDisplayHostCommand RemoveTracksFromPlaylistCommand}"
						  CommandParameter="{Binding}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource RemoveTrackIcon}"/>
					</MenuItem.Icon>
				</MenuItem>
			</ContextMenu>
		</Setter>

	</Style>


</Styles>