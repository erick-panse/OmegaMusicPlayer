<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:OmegaPlayer.UI.Controls.TrackDisplay"
        xmlns:vm="using:OmegaPlayer.Features.Library.ViewModels"
		xmlns:helpers="using:OmegaPlayer.UI.Controls.Helpers"
        xmlns:models="using:OmegaPlayer.Features.Library.Models"
		xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions">

	<!-- Base Style for TrackDisplayControl -->
	<Style Selector="controls|TrackDisplayControl">
		<Setter Property="Template">
			<ControlTemplate>
				<ItemsControl Name="PART_ItemsControl"
							ItemsSource="{TemplateBinding ItemsSource}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
				</ItemsControl>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- Card View Style -->
	<Style Selector="controls|TrackDisplayControl[ViewType=Card]">
		<Setter Property="Template">
			<ControlTemplate>
				<ItemsControl Name="PART_ItemsControl"
							ItemsSource="{TemplateBinding ItemsSource}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>

					<ItemsControl.ItemTemplate>
						<DataTemplate x:DataType="models:TrackDisplayModel">
							<Border Name="TrackOuterContainer">
								<StackPanel Classes="trackPanel">
									<Border Width="150" Height="210"
											Padding="10"
											CornerRadius="5"
											Background="Transparent"
											Name="TrackContainer"
											DragDrop.AllowDrop="True"
											IsHitTestVisible="True"
											Classes="trackPanel contextMenu"
											Classes.playing="{Binding IsCurrentlyPlaying}"
											Classes.dragging="{Binding IsBeingDragged}">
										<StackPanel Orientation="Vertical" >
											<Grid>
												<Border CornerRadius="5"
														ClipToBounds="True"
														Background="Transparent">
													<Image Width="130" Height="130"
													   Source="{Binding Thumbnail}"
													   Classes="trackImage"/>
												</Border>

												<!-- Overlay Controls (visible on hover) -->
												<Grid>
													<Grid.Opacity>
														<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
															<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Grid, AncestorLevel=1}"/>
															<Binding Path="IsSelected"/>
														</MultiBinding>
													</Grid.Opacity>

													<!-- Selection CheckBox -->
													<CheckBox Classes="trackSelectionBox Clickable"
														 VerticalAlignment="Top"
														 HorizontalAlignment="Left"
														 Margin="5 0 0 0"/>

													<Button Classes="trackPlayButton Clickable"
															VerticalAlignment="Bottom"
															HorizontalAlignment="Right"
															Margin="5"/>

													<Button Grid.Column="4"
															VerticalAlignment="Bottom"
															HorizontalAlignment="Left"
															Margin="5"
															Classes="likeButton Clickable"/>
												</Grid>
											</Grid>

											<StackPanel Width="110"
														HorizontalAlignment="Center"
														Spacing="2"
														ClipToBounds="True"
														Margin="0,5,0,0">
												<helpers:CustomTextBlock
													Text="{Binding Title}"
													FontSize="14"
													Classes="scrollingText default cardText"/>

												<!-- For Card View -->
												<helpers:ScrollingArtistsList
													Artists="{Binding Artists}"
													ArtistClickCommand="{ReflectionBinding DataContext.OpenArtistCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
													Classes="cardText"
													Margin="0,2,0,0"/>
												<Button
													Grid.Column="5"
													FontSize="12"
													Classes="albumButton">
													<helpers:CustomTextBlock Classes="scrollingText default cardText Clickable" Text="{Binding AlbumTitle}"/>
												</Button>
											</StackPanel>

										</StackPanel>
									</Border>
									<!-- Add drop indicator -->
									<Border IsVisible="{Binding ShowDropIndicator}"
											ZIndex="999"
											Classes="dropIndicator"
											Grid.Row="1"/>
								</StackPanel>
							</Border>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- List View Style -->
	<Style Selector="controls|TrackDisplayControl[ViewType=List]">
		<Setter Property="Template">
			<ControlTemplate>
				<ItemsControl Name="PART_ItemsControl"
							ItemsSource="{TemplateBinding ItemsSource}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>

					<ItemsControl.ItemTemplate>
						<DataTemplate x:DataType="models:TrackDisplayModel">
							<Border Name="TrackOuterContainer">
								<StackPanel>
									<Border Height="65"
											CornerRadius="5"
											Name="TrackContainer"
											DragDrop.AllowDrop="True"
											Classes="trackPanel contextMenu"
											Classes.playing="{Binding IsCurrentlyPlaying}"
											Classes.dragging="{Binding IsBeingDragged}"
											IsHitTestVisible="True"
											Background="{DynamicResource MainColor}">
										<Grid>
											<Grid.ColumnDefinitions>
												<!-- Checkbox -->
												<ColumnDefinition Width="Auto"/>
												<!-- Play Button -->
												<ColumnDefinition Width="Auto"/>
												<!-- Image -->
												<ColumnDefinition Width="Auto"/>
												<!-- Title/Artists -->
												<ColumnDefinition Width="3*"/>
												<!-- Like Button -->
												<ColumnDefinition Width="Auto"/>
												<!-- Album -->
												<ColumnDefinition Width="2*"/>
												<!-- Genre -->
												<ColumnDefinition Width="1*"/>
												<!-- Duration -->
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<CheckBox Grid.Column="0"
													Classes="trackSelectionBox Clickable"
													Margin="5,0">
												<CheckBox.Opacity>
													<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
														<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Border, AncestorLevel=1}"/>
														<Binding Path="IsSelected"/>
													</MultiBinding>
												</CheckBox.Opacity>
											</CheckBox>

											<Button Grid.Column="1"
													Classes="trackPlayButton Clickable"
													Width="25" Height="25">
												<Button.Opacity>
													<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
														<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Border, AncestorLevel=1}"/>
														<Binding Path="IsSelected"/>
													</MultiBinding>
												</Button.Opacity>
											</Button>

											<Image Grid.Column="2"
												   Classes="trackImage"
												   Width="60"
												   Height="60"
												   Margin="5,0"
												   Source="{Binding Thumbnail}"/>

											<StackPanel Grid.Column="3"
														Margin="10,0"
														ClipToBounds="True"
														VerticalAlignment="Center">
												<helpers:CustomTextBlock
													Text="{Binding Title}"
													FontSize="14"
													Classes="scrollingTextList default"/>
												<helpers:ScrollingArtistsList
													AnimationWidth="{Binding $parent[Grid].Width}"
													HorizontalAlignment="Left"
													Artists="{Binding Artists}"
													ArtistClickCommand="{ReflectionBinding DataContext.OpenArtistCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
													Margin="0,8,0,0"/>
											</StackPanel>

											<Button Grid.Column="4"
													Margin="5"
													Classes="likeButton Clickable"
													VerticalAlignment="Center">
												<Button.Opacity>
													<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
														<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Border, AncestorLevel=1}"/>
														<Binding Path="IsSelected"/>
													</MultiBinding>
												</Button.Opacity>
											</Button>

											<Button Grid.Column="5"
													Classes="albumButton">
												<helpers:CustomTextBlock
													Text="{Binding AlbumTitle}"
													FontSize="12"
													Classes="scrollingTextList default Clickable"/>
											</Button>

											<Button Grid.Column="6"
													Classes="genreButton">
												<helpers:CustomTextBlock 
													Text="{Binding Genre}" 
													FontSize="12"
													Classes="scrollingTextList default Clickable"/>
											</Button>
											<TextBlock Grid.Column="7"
													 Classes="trackDuration default"/>
										</Grid>
									</Border>
									<!-- Add drop indicator -->
									<Border IsVisible="{Binding ShowDropIndicator}"
											ZIndex="999"
											Classes="dropIndicator"
											Grid.Row="1"/>
								</StackPanel>
							</Border>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- Image View Style -->
	<Style Selector="controls|TrackDisplayControl[ViewType=Image]">
		<Setter Property="Template">
			<ControlTemplate>
				<ItemsControl Name="PART_ItemsControl"
							ItemsSource="{TemplateBinding ItemsSource}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>

					<ItemsControl.ItemTemplate>
						<DataTemplate x:DataType="models:TrackDisplayModel">
							<Border Name="TrackOuterContainer">
								<StackPanel>
									<Border Name="TrackContainer"
											DragDrop.AllowDrop="True"
											IsHitTestVisible="True"
											Classes="trackPanel contextMenu"
											Classes.playingImageView="{Binding IsCurrentlyPlaying}"
											 Classes.dragging="{Binding IsBeingDragged}">
										<Grid Width="140" Height="140"
											  ClipToBounds="True"
											  Margin="5">
											<Image Classes="trackImage"
												   Source="{Binding Thumbnail}"/>

											<Grid Classes="fade">
												<Grid.Opacity>
													<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
														<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Grid, AncestorLevel=1}"/>
														<Binding Path="IsSelected"/>
													</MultiBinding>
												</Grid.Opacity>

												<helpers:CustomTextBlock VerticalAlignment="Bottom"
																		 HorizontalAlignment="Center"
																		 Margin="5,0,0,10"
																		 FontSize="12"
																		 Text="{Binding Title}"
																		 FontWeight="Bold"
																		 TextWrapping="NoWrap"
																		 TextTrimming="None"
																		 ClipToBounds="False"
																		 Classes="default"
																		 MaxWidth="180"
																		 AnimationWidth="135"/>
												
												<CheckBox Classes="trackSelectionBox Clickable"
														  VerticalAlignment="Top"
														  HorizontalAlignment="Left"
														  Margin="5,0,0,0"/>

												<StackPanel Orientation="Vertical"
															VerticalAlignment="Top"
															HorizontalAlignment="Right">

													<Button Classes="trackPlayButton Clickable"
															Margin="0"/>

													<Button Margin="0 0 0 0"
															Classes="likeButton Clickable"/>
												</StackPanel>
											</Grid>
										</Grid>
									</Border>
									<!-- Add drop indicator -->
									<Border IsVisible="{Binding ShowDropIndicator}"
											ZIndex="999"
											Classes="dropIndicator"
											Grid.Row="1"/>
								</StackPanel>
							</Border>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- Round Image View Style -->
	<Style Selector="controls|TrackDisplayControl[ViewType=RoundImage]">
		<Setter Property="Template">
			<ControlTemplate>
				<ItemsControl Name="PART_ItemsControl"
							ItemsSource="{TemplateBinding ItemsSource}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>

					<ItemsControl.ItemTemplate>
						<DataTemplate DataType="models:TrackDisplayModel">
							<Border Name="TrackOuterContainer">
								<StackPanel>
									<Border  Name="TrackContainer"
											 CornerRadius="5"
											 DragDrop.AllowDrop="True"
											 IsHitTestVisible="True"
											 Classes="trackPanel contextMenu"
											 Classes.playingImageView="{Binding IsCurrentlyPlaying}"
											 Classes.dragging="{Binding IsBeingDragged}">
										<StackPanel Width="138" Height="170"
													Name="TrackPanel"
													Spacing="8"
													HorizontalAlignment="Center"
													Classes="trackPanel">
											<!-- Track Image Container -->
											<Grid Width="140" Height="140"
												  HorizontalAlignment="Center">
												<!-- Circular Clip for Image -->
												<Ellipse Width="130" Height="130">
													<Ellipse.Fill>
														<ImageBrush Source="{Binding Thumbnail}"
																	Stretch="UniformToFill"/>
													</Ellipse.Fill>
												</Ellipse>

												<!-- Overlay Controls (visible on hover) -->
												<Grid>
													<Grid.Opacity>
														<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
															<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Grid, AncestorLevel=1}"/>
															<Binding Path="IsSelected"/>
														</MultiBinding>
													</Grid.Opacity>

													<!-- Selection CheckBox -->
													<CheckBox Classes="trackSelectionBox Clickable"
														 VerticalAlignment="Center"
														 HorizontalAlignment="Left"
														 Margin="5 0 0 0"/>

													<Button Classes="trackPlayButton Clickable"
															VerticalAlignment="Center"
															HorizontalAlignment="Right"
															Margin="0"/>

													<Button Grid.Column="4"
															VerticalAlignment="Bottom"
															HorizontalAlignment="Center"
															Margin="0"
															Classes="likeButton Clickable"/>
												</Grid>
											</Grid>

											<!-- Title (always visible, centered below image) -->
											<Border Width="110"
													Height="20"
													HorizontalAlignment="Center"
													VerticalAlignment="Top"
													ClipToBounds="True"
													x:Name="TitleContainer">
												<helpers:CustomTextBlock
													Text="{Binding Title}"
													FontSize="14"
													Classes="scrollingText default"
													Margin="0 0 0 10"/>
											</Border>
										</StackPanel>
									</Border>
									<!-- Add drop indicator -->
									<Border IsVisible="{Binding ShowDropIndicator}"
											ZIndex="999"
											Classes="dropIndicator"
											Grid.Row="1"/>
								</StackPanel>
							</Border>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- Common Element Styles -->

	<!-- Play Button Style -->
	<Style Selector="Button.trackPlayButton" x:DataType="models:TrackDisplayModel">
		<Setter Property="Width" Value="30"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="Content">
			<Template>
				<PathIcon Data="{StaticResource PlayIcon}"
						  Width="15" Height="15" Margin="0 2 0 0"
						  Foreground="{DynamicResource AccentColor}"/>
			</Template>
		</Setter>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="CornerRadius" Value="25"/>
		<Setter Property="IsVisible" Value="{ReflectionBinding !DataContext.IsReorderMode, RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
		<Setter Property="Command" Value="{ReflectionBinding DataContext.PlayTrackCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
		<Setter Property="CommandParameter" Value="{Binding}"/>
	</Style>

	<Style Selector="Button.trackPlayButton:pointerover /template/ ContentPresenter" >
		<Setter Property="Background" Value="{DynamicResource SecondaryColorLighter}"/>
		<Setter Property="CornerRadius" Value="25"/>
	</Style>
	<Style Selector="Button.trackPlayButton:pressed /template/ ContentPresenter" >
		<Setter Property="Background" Value="{DynamicResource SecondaryColorLighterGradient}"/>
		<Setter Property="CornerRadius" Value="25"/>
	</Style>

	<!-- Checkbox Style -->
	<Style Selector="CheckBox.trackSelectionBox" x:DataType="models:TrackDisplayModel">
		<Setter Property="IsChecked" Value="{Binding IsSelected, Mode=TwoWay}"/>
		<Setter Property="IsVisible" Value="{ReflectionBinding !DataContext.IsReorderMode, RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
		<Setter Property="Command" Value="{ReflectionBinding DataContext.TrackSelectionCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
		<Setter Property="CommandParameter" Value="{Binding}"/>
	</Style>

	<Style Selector="Grid.fade" >
		<Setter Property="Background" Value="{StaticResource FadingBlack}"/>
	</Style>

	<!-- Scrolling Text Style -->
	<Style Selector="helpers|CustomTextBlock.scrollingText">
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="TextTrimming" Value="None"/>
		<!-- space available to move text -->
		<Setter Property="AnimationWidth" Value="100"/>
	</Style>

	<!-- Helper list Style -->
	<Style Selector="helpers|CustomTextBlock.scrollingTextList">
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="TextTrimming" Value="None"/>
		<!-- space available to move text -->
		<Setter Property="AnimationWidth" Value="{Binding $parent[Grid].Width}"/>
	</Style>

	<!-- Artists ItemsControl Style -->
	<Style Selector="helpers|CustomTextBlock.artistsText" x:DataType="models:TrackDisplayModel">
		<Setter Property="Text" Value="{Binding Artists}"/>
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="TextTrimming" Value="None"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Cursor" Value="Hand"/>
	</Style>

	<!-- Album Button Style -->
	<Style Selector="Button.albumButton" x:DataType="models:TrackDisplayModel">
		<Setter Property="Command" Value="{ReflectionBinding DataContext.OpenAlbumCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
		<Setter Property="CommandParameter" Value="{Binding AlbumID}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="FontSize" Value="11"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style>

	<Style Selector="Button.albumButton:pointerover /template/ ContentPresenter">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
	</Style>

	<!-- Like Button Style -->
	<Style Selector="Button.likeButton" x:DataType="models:TrackDisplayModel">
		<Setter Property="Command" Value="{ReflectionBinding DataContext.ToggleTrackLikeCommand, 
                                    RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
		<Setter Property="CommandParameter" Value="{Binding}"/>
		<Setter Property="IsVisible" Value="{ReflectionBinding DataContext.IsReorderMode, 
                                     RelativeSource={RelativeSource AncestorType=ItemsControl}, 
                                     Converter={x:Static BoolConverters.Not}}"/>
		<Setter Property="Width" Value="30"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="CornerRadius" Value="25"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Content">
			<Template>
				<PathIcon Data="{Binding LikeIcon}"
						  Width="20" Height="20" Margin="0 3 0 0"
						  Foreground="{DynamicResource AccentColor}"/>
			</Template>
		</Setter>
	</Style>

	<Style Selector="Button.likeButton:pointerover /template/ ContentPresenter" x:DataType="models:TrackDisplayModel">
		<Setter Property="Background" Value="{DynamicResource SecondaryColorSolid}"/>
		<Setter Property="BorderThickness" Value="1"/>
	</Style>
	<Style Selector="Button.likeButton:pressed /template/ ContentPresenter" x:DataType="models:TrackDisplayModel">
		<Setter Property="Background" Value="{DynamicResource SecondaryColorLighterGradient}"/>
		<Setter Property="BorderThickness" Value="1"/>
	</Style>

	<!-- Track Duration Style -->
	<Style Selector="TextBlock.trackDuration" x:DataType="models:TrackDisplayModel">
		<Setter Property="Text" Value="{Binding Duration, StringFormat=\{0:mm\\:ss\}}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="5,0"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>

	<!-- Genre Button Style -->
	<Style Selector="Button.genreButton" x:DataType="models:TrackDisplayModel">
		<Setter Property="Command" Value="{ReflectionBinding DataContext.OpenGenreCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
		<Setter Property="CommandParameter" Value="{Binding Genre}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="FontSize" Value="11"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style>

	<Style Selector="Button.genreButton:pointerover /template/ ContentPresenter">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
	</Style>

	<!-- Track Image Style -->
	<Style Selector="Image.trackImage">
		<Setter Property="Stretch" Value="UniformToFill"/>
	</Style>

	<!-- Card Text Style -->
	<Style Selector="helpers|CustomTextBlock.cardText">
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Width" Value="110"/>
	</Style>

	<!-- Card Artists specific style -->
	<Style Selector="ItemsControl.cardArtists">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Width" Value="110"/>
		<Setter Property="Margin" Value="0,2"/>
	</Style>

	<!-- Additional style to ensure button stays transparent -->
	<Style Selector="Button:pointerover">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
	</Style>

	<Style Selector="helpers|ScrollingArtistsList.cardText">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="Width" Value="110"/>
	</Style>

	<!-- Modify the Artists List style similarly -->
	<Style Selector="helpers|ScrollingArtistsList"> 
		<Setter Property="ArtistClickCommand" Value="{ReflectionBinding DataContext.OpenArtistCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
	</Style>

	<!-- Track panel style -->
	<Style Selector="Border.trackPanel">
		<Setter Property="ClipToBounds" Value="True"/>
		<Setter Property="Background" Value="{DynamicResource SecondaryColorDarkerGradient}"/>
		<Setter Property="Margin" Value="3"/>
		<Setter Property="Transitions">
			<Transitions>
				<BrushTransition Property="Background" Duration="0:0:0.1"/>
				<DoubleTransition Property="Opacity" Duration="0:0:0.1"/>
			</Transitions>
		</Setter>
	</Style>
	<Style Selector="Border.trackPanel:pointerover" >
		<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
	</Style>

	<!-- Track Stackpanel style -->
	<Style Selector="StackPanel.trackPanel" >
		<Setter Property="ClipToBounds" Value="True"/>
	</Style>

	<!-- Currently Playing Track Style -->
	<Style Selector="Border.playing">
		<Setter Property="Background" Value="{DynamicResource SecondaryColorLighter}"/>
	</Style>
	<Style Selector="Border.playing:pointerover">
		<Setter Property="Background" Value="{DynamicResource SecondaryColorLighterGradient}"/>
	</Style>
	
	<Style Selector="Border.playingImageView">
		<Setter Property="Background" Value="{DynamicResource SecondaryColorLightest}"/>
	</Style>
	<Style Selector="Border.playingImageView:pointerover">
		<Setter Property="Background" Value="{DynamicResource SecondaryColorLighterGradient}"/>
	</Style>

	<!-- Drag and Drop Style -->
	<Style Selector="Border.trackPanel.dragging">
		<Setter Property="Opacity" Value="0.8"/>
		<Setter Property="Background" Value="{DynamicResource AccentColorDarkerGradient}"/>
		<Setter Property="ZIndex" Value="1000"/>
	</Style>

	<Style Selector="Border.dropIndicator">
		<Setter Property="Height" Value="2"/>
		<Setter Property="Background" Value="{DynamicResource AccentColor}"/>
		<Setter Property="Margin" Value="0,2"/>
		<Setter Property="ZIndex" Value="999"/>
	</Style>

	<!-- outer container style -->
	<Style Selector="Border[Name=TrackOuterContainer]">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="DragDrop.AllowDrop" Value="True"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="0"/>
	</Style>

	<!-- Context Menu Style -->
	<Style Selector="Border.contextMenu" x:DataType="models:TrackDisplayModel">
		<Setter Property="ContextMenu">
			<ContextMenu DataContext="{Binding}">
				<MenuItem Header="{Localize Play}"
						  Command="{ReflectionBinding $parent[UserControl].DataContext.PlayTrackCommand}"
						  CommandParameter="{Binding}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource PlayIcon}" Classes="default"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{Localize PlayNext}"
						  Command="{ReflectionBinding $parent[UserControl].DataContext.PlayNextTracksCommand}"
						  CommandParameter="{Binding}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource PlayNextTrackIcon}" Classes="default"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{Localize AddToQueue}"
						  Command="{ReflectionBinding $parent[UserControl].DataContext.AddToQueueCommand}"
						  CommandParameter="{Binding}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource AddTrackToQueueIcon}" Classes="default"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Header="{Localize GoToArtist}"
						  Command="{ReflectionBinding $parent[UserControl].DataContext.OpenArtistCommand}"
						  CommandParameter="{Binding Artists[0]}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource ArtistIconV2}" Classes="default"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{Localize GoToAlbum}"
						  Command="{ReflectionBinding $parent[UserControl].DataContext.OpenAlbumCommand}"
						  CommandParameter="{Binding AlbumID}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource AlbumIcon}" Classes="default"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{Localize GoToGenre}"
						  Command="{ReflectionBinding $parent[UserControl].DataContext.OpenGenreCommand}"
						  CommandParameter="{Binding Genre}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource GenreIconV2}" Classes="default"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{Localize Properties}"
						  Command="{ReflectionBinding $parent[UserControl].DataContext.ShowTrackPropertiesCommand}"
						  CommandParameter="{Binding}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource InfoIconV2}" Classes="default"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Header="{Localize AddToPlaylist}"
						  Command="{ReflectionBinding $parent[UserControl].DataContext.ShowPlaylistSelectionDialogCommand}"
						  CommandParameter="{Binding}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource PlaylistIcon}" Classes="default"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{Localize RemoveFromPlaylist}"
						  IsVisible="{ReflectionBinding $parent[UserControl].DataContext.IsPlaylistContent}"
						  Command="{ReflectionBinding $parent[UserControl].DataContext.RemoveTracksFromPlaylistCommand}"
						  CommandParameter="{Binding}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource RemoveTrackIcon}" Classes="default"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{Localize RemoveFromNowPlaying}"
						  IsVisible="{ReflectionBinding $parent[UserControl].DataContext.IsNowPlayingContent}"
						  Command="{ReflectionBinding $parent[UserControl].DataContext.RemoveTracksFromNowPlayingCommand}"
						  CommandParameter="{Binding}">
					<MenuItem.Icon>
						<PathIcon Data="{StaticResource RemoveTrackIcon}" Classes="default"/>
					</MenuItem.Icon>
				</MenuItem>
			</ContextMenu>
		</Setter>

	</Style>


</Styles>