<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:OmegaPlayer.Features.Library.ViewModels"
			 xmlns:helpers="using:OmegaPlayer.UI.Controls.Helpers"
             x:Class="OmegaPlayer.Features.Library.Views.GenresView"
             x:DataType="vm:GenresViewModel">

	<UserControl.Styles>
		<StyleInclude Source="/UI/Styles/ItemStyles.axaml"/>
	</UserControl.Styles>

	<Grid>
		<ScrollViewer>
			<ItemsControl Name="PART_ItemsControl" ItemsSource="{Binding Genres}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<WrapPanel Margin="5"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>

				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<StackPanel Classes="baseItemPanel">
							<Button Classes="baseButtonRound"
                                    Name="GenreButton"
                                    Command="{Binding $parent[ItemsControl].((vm:GenresViewModel)DataContext).OpenGenreDetailsCommand}"
                                    CommandParameter="{Binding}">
								<Button.ContextMenu>
									<ContextMenu DataContext="{Binding}">
										<MenuItem Header="Play Artist"
												  Command="{Binding $parent[UserControl].((vm:GenresViewModel)DataContext).PlayGenreTracksCommand}"
												  CommandParameter="{Binding}">
											<MenuItem.Icon>
												<PathIcon Data="{StaticResource PlayIcon}"/>
											</MenuItem.Icon>
										</MenuItem>
										<MenuItem Header="Add as Next"
												  Command="{Binding $parent[UserControl].((vm:GenresViewModel)DataContext).AddGenreTracksToNextCommand}"
												  CommandParameter="{Binding}">
											<MenuItem.Icon>
												<PathIcon Data="{StaticResource AddAsNextTrackIcon}"/>
											</MenuItem.Icon>
										</MenuItem>
										<MenuItem Header="Add to Queue"
												  Command="{Binding $parent[UserControl].((vm:GenresViewModel)DataContext).AddGenreTracksToQueueCommand}"
												  CommandParameter="{Binding}">
											<MenuItem.Icon>
												<PathIcon Data="{StaticResource AddTrackToQueueIcon}"/>
											</MenuItem.Icon>
										</MenuItem>
										<Separator/>
										<MenuItem Header="Add to Playlist"
												  Command="{Binding $parent[UserControl].((vm:GenresViewModel)DataContext).ShowPlaylistSelectionDialogCommand}"
												  CommandParameter="{Binding}">
											<MenuItem.Icon>
												<PathIcon Data="{StaticResource PlaylistIcon}"/>
											</MenuItem.Icon>
										</MenuItem>
									</ContextMenu>
								</Button.ContextMenu>
								<Border Classes="baseItemRound" CornerRadius="5"
                                        Name="GenrePanel">
									<!-- Genre Image Container -->
									<StackPanel Spacing="5" 
												Orientation="Vertical"
												Width="110"> <!-- Width is used by CustomTextBlock to animate text-->
										<Grid>
											<!-- Circle Background and Clipping -->
											<Ellipse Classes="baseItemRoundImage"
                                                    Fill="{DynamicResource MainColor}"/>

											<!-- Genre Photo (when available) -->
											<Ellipse Classes="baseItemRoundImage"
                                                    IsVisible="{Binding Photo}">
												<Ellipse.Fill>
													<ImageBrush Source="{Binding Photo}"
                                                               Stretch="UniformToFill"/>
												</Ellipse.Fill>
											</Ellipse>

											<!-- Default Genre Icon (when no photo) -->
											<PathIcon Data="{StaticResource GenreIconV2}"
                                                     Width="60" Height="60"
                                                     HorizontalAlignment="Center" VerticalAlignment="Center"
                                                     Foreground="{DynamicResource AccentColor}"
                                                     IsVisible="{Binding !Photo}"/>

											<!-- Overlay Controls -->
											<Grid>
												<Grid.Opacity>
													<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
														<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Button, AncestorLevel=1}"/>
														<Binding Path="IsSelected"/>
													</MultiBinding>
												</Grid.Opacity>

												<!-- Selection CheckBox -->
												<CheckBox Classes="baseItemSelectionBoxMiddle"
														  Command="{Binding $parent[ItemsControl].((vm:GenresViewModel)DataContext).SelectGenreCommand}"
                                                         IsChecked="{Binding IsSelected, Mode=TwoWay}"
                                                         CommandParameter="{Binding}"
                                                         VerticalAlignment="Center"
                                                         HorizontalAlignment="Left"/>

												<!-- Play Button -->
												<Button Classes="baseItemPlayButtonMiddle"
														Command="{Binding $parent[ItemsControl].((vm:GenresViewModel)DataContext).PlayGenreFromHereCommand}"
                                                        CommandParameter="{Binding}"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Right"/>
											</Grid>
										</Grid>

										<!-- Genre Name -->
										<helpers:CustomTextBlock Text="{Binding Name}" Classes="baseItemTitle"/>

										<!-- Track Count and Duration -->
										<StackPanel Orientation="Horizontal"
                                                  HorizontalAlignment="Center">
											<TextBlock Text="{Binding TrackCount}"
                                                     Classes="baseItemStats"/>
											<TextBlock Text=" tracks â€¢ "
                                                     Classes="baseItemStats"/>
											<TextBlock Text="{Binding TotalDuration, StringFormat=\{0:hh\\:mm\\:ss\}}"
                                                     Classes="baseItemStats"/>
										</StackPanel>
									</StackPanel>
								</Border>
							</Button>
						</StackPanel>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</ScrollViewer>

		<!-- Loading Indicator -->
		<ProgressBar IsVisible="{Binding IsLoading}"
                    IsIndeterminate="False"
                    Value="{Binding LoadingProgress}"
                    VerticalAlignment="Top"
                    Height="2"
                    Margin="0,0,0,10"/>

	</Grid>
</UserControl>