<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:OmegaPlayer.Features.Library.ViewModels"
			 xmlns:helpers="using:OmegaPlayer.UI.Controls.Helpers"
             x:Class="OmegaPlayer.Features.Library.Views.ArtistsView"
             x:DataType="vm:ArtistsViewModel">

	<UserControl.Styles>
		<StyleInclude Source="/UI/Styles/ItemStyles.axaml"/>

	</UserControl.Styles>

	<Grid>
		<ScrollViewer VerticalScrollBarVisibility="Visible"
					  HorizontalScrollBarVisibility="Disabled"
					  Padding="0"
					  Margin="0,0,0,8"
					  ScrollChanged="ScrollViewer_ScrollChanged">
			<ItemsControl Name="PART_ItemsControl" ItemsSource="{Binding Artists}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<WrapPanel Margin="5"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>

				<ItemsControl.ItemTemplate>
					<DataTemplate>
						
							<Button Classes="baseButtonRound"
                                    Name="ArtistButton"	
                                    Command="{Binding $parent[ItemsControl].((vm:ArtistsViewModel)DataContext).OpenArtistDetailsCommand}"
                                    CommandParameter="{Binding}">
								<Button.ContextMenu>
									<ContextMenu DataContext="{Binding}">
										<MenuItem Header="{Localize PlayArtist}"
												  Command="{Binding $parent[UserControl].((vm:ArtistsViewModel)DataContext).PlayArtistTracksCommand}"
												  CommandParameter="{Binding}">
											<MenuItem.Icon>
												<PathIcon Classes="default" Data="{StaticResource PlayIcon}"/>
											</MenuItem.Icon>
										</MenuItem>
										<MenuItem Header="{Localize PlayNext}"
												  Command="{Binding $parent[UserControl].((vm:ArtistsViewModel)DataContext).AddArtistTracksToNextCommand}"
												  CommandParameter="{Binding}">
											<MenuItem.Icon>
												<PathIcon Classes="default" Data="{StaticResource PlayNextTrackIcon}"/>
											</MenuItem.Icon>
										</MenuItem>
										<MenuItem Header="{Localize AddToQueue}"
												  Command="{Binding $parent[UserControl].((vm:ArtistsViewModel)DataContext).AddArtistTracksToQueueCommand}"
												  CommandParameter="{Binding}">
											<MenuItem.Icon>
												<PathIcon Classes="default" Data="{StaticResource AddTrackToQueueIcon}"/>
											</MenuItem.Icon>
										</MenuItem>
										<Separator/>
										<MenuItem Header="{Localize AddToPlaylist}"
												  Command="{Binding $parent[UserControl].((vm:ArtistsViewModel)DataContext).ShowPlaylistSelectionDialogCommand}"
												  CommandParameter="{Binding}">
											<MenuItem.Icon>
												<PathIcon Classes="default" Data="{StaticResource PlaylistIcon}"/>
											</MenuItem.Icon>
										</MenuItem>
									</ContextMenu>
								</Button.ContextMenu>
								<Border Classes="baseItemRound" CornerRadius="5"
                                        Name="ArtistPanel">

									<StackPanel Classes="baseItemPanel">
										<Grid>
											<!-- Circle Background and Clipping -->
											<Ellipse Classes="baseItemRoundImage"
													 Fill="{DynamicResource MainColor}"/>

											<!-- Artist Photo (when available) -->
											<Ellipse Classes="baseItemRoundImage"
													 IsVisible="{Binding Photo}">
												<Ellipse.Fill>
													<ImageBrush Source="{Binding Photo}" 
																Stretch="UniformToFill"/>
												</Ellipse.Fill>
											</Ellipse>

											<!-- Default Artist Icon (when no photo) -->
											<PathIcon Data="{StaticResource ArtistIconV2}"
                                                     Width="60" Height="60"
                                                     HorizontalAlignment="Center" VerticalAlignment="Center"
                                                     Foreground="{DynamicResource AccentColor}"
                                                     IsVisible="{Binding !Photo}"/>

											<!-- Overlay Controls (visible on hover) -->
											<Grid>
												<Grid.Opacity>
													<MultiBinding Converter="{StaticResource BooleanToOpacityConverter}">
														<Binding Path="IsPointerOver" RelativeSource="{RelativeSource AncestorType=Button, AncestorLevel=1}"/>
														<Binding Path="IsSelected"/>
													</MultiBinding>
												</Grid.Opacity>

												<!-- Selection CheckBox -->
												<CheckBox Classes="baseItemSelectionBoxMiddle"
														  Command="{Binding $parent[ItemsControl].((vm:ArtistsViewModel)DataContext).SelectArtistCommand}"
                                                         IsChecked="{Binding IsSelected, Mode=TwoWay}"
                                                         CommandParameter="{Binding}"
                                                         VerticalAlignment="Center"
                                                         HorizontalAlignment="Left"/>

												<!-- Play Button -->
												<Button Classes="baseItemPlayButtonMiddle"
														Command="{Binding $parent[ItemsControl].((vm:ArtistsViewModel)DataContext).PlayArtistFromHereCommand}"
                                                        CommandParameter="{Binding}"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Right"/>
											</Grid>
										</Grid>

										<!-- Artist Name -->
										<helpers:CustomTextBlock Text="{Binding Name}" Classes="baseItemTitle default"/>

										<!-- Track Count and Duration -->
										<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
											<TextBlock Text="{Binding TrackCount}" Classes="baseItemStats"/>
											<TextBlock Text="{Localize TracksForCount}" Classes="baseItemStats"/>
											<TextBlock Text="{Binding TotalDuration, StringFormat=\{0:hh\\:mm\\:ss\}}"
													   Classes="baseItemStats"/>
										</StackPanel>
									</StackPanel>
								</Border>
							</Button>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</ScrollViewer>

		<!-- Loading Indicator -->
		<ProgressBar Classes="loading"
					 IsVisible="{Binding IsLoading}"
					 Value="{Binding LoadingProgress}"
					 VerticalAlignment="Top"/>

	</Grid>
</UserControl>