<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="using:OmegaPlayer.UI.Controls.TrackDisplay"
             xmlns:vm="using:OmegaPlayer.Features.Library.ViewModels"
             x:Class="OmegaPlayer.Features.Library.Views.VirtualizationTestView"
             x:DataType="vm:VirtualizationTestViewModel">

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<!-- Test Controls -->
		<Border Grid.Row="0"
                Classes="headerBorder"
                Background="{DynamicResource MainColor}">
			<StackPanel Orientation="Horizontal"
                        Spacing="10"
                        Margin="20,10">

				<!-- Track Count Input -->
				<StackPanel Orientation="Horizontal" Spacing="5">
					<TextBlock Text="Tracks:"
                               VerticalAlignment="Center"
                               Classes="default"/>
					<NumericUpDown Value="{Binding TrackCount}"
                                   Minimum="100"
                                   Maximum="10000"
                                   Increment="100"
                                   Width="100"/>
				</StackPanel>

				<!-- Generate Button -->
				<Button Command="{Binding GenerateTestTracksCommand}"
                        Content="Generate Test Tracks"
                        Classes="headerButton"/>

				<!-- Clear Button -->
				<Button Command="{Binding ClearTracksCommand}"
                        Content="Clear"
                        Classes="headerButton"/>

				<!-- View Type Buttons -->
				<Border BorderBrush="{DynamicResource SecondaryColor}"
                        BorderThickness="1"
                        CornerRadius="5">
					<StackPanel Orientation="Horizontal">
						<Button Command="{Binding ChangeViewTypeCommand}"
                                CommandParameter="List"
                                Content="List"
                                Classes="viewTypeButton"
                                Classes.selected="{Binding CurrentViewType, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=List}"/>
						<Button Command="{Binding ChangeViewTypeCommand}"
                                CommandParameter="Card"
                                Content="Card"
                                Classes="viewTypeButton"
                                Classes.selected="{Binding CurrentViewType, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=Card}"/>
						<Button Command="{Binding ChangeViewTypeCommand}"
                                CommandParameter="Image"
                                Content="Image"
                                Classes="viewTypeButton"
                                Classes.selected="{Binding CurrentViewType, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=Image}"/>
						<Button Command="{Binding ChangeViewTypeCommand}"
                                CommandParameter="RoundImage"
                                Content="Round"
                                Classes="viewTypeButton"
                                Classes.selected="{Binding CurrentViewType, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=RoundImage}"/>
					</StackPanel>
				</Border>

				<!-- Scroll Test Button -->
				<Button Command="{Binding SimulateScrollingCommand}"
                        Content="Test Scrolling"
                        Classes="headerButton"/>
			</StackPanel>
		</Border>

		<!-- Performance Stats -->
		<Border Grid.Row="1"
                Background="{DynamicResource SecondaryColor}"
                Margin="0,2">
			<ScrollViewer MaxHeight="150"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Auto">
				<TextBlock Text="{Binding PerformanceStats}"
                           Margin="10"
                           FontFamily="Consolas"
                           FontSize="12"
                           Classes="default"/>
			</ScrollViewer>
		</Border>

		<!-- Track Display with Performance Monitoring -->
		<Grid Grid.Row="2">
			<!-- Loading Indicator -->
			<ProgressBar IsVisible="{Binding IsLoading}"
                         Classes="loading"
                         IsIndeterminate="True"
                         VerticalAlignment="Top"/>

			<!-- Virtualization Test Area -->
			<ScrollViewer x:Name="TestScrollViewer"
                          Margin="0,5,0,0"
                          ScrollChanged="TestScrollViewer_ScrollChanged">

				<!-- Current ItemsControl Implementation -->
				<controls:TrackDisplayControl
                    x:Name="TestTrackControl"
                    ItemsSource="{Binding TestTracks}"
                    ViewType="{Binding CurrentViewType}"
                    Margin="10"/>

			</ScrollViewer>

			<!-- Performance Overlay -->
			<Border HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Background="{DynamicResource MainColor}"
                    CornerRadius="5"
                    Margin="10"
                    Padding="10"
                    Opacity="0.9">
				<StackPanel>
					<TextBlock Text="{Binding TestTracks.Count, StringFormat='Items: {0:N0}'}"
                               Classes="default"
                               FontSize="12"/>
					<TextBlock x:Name="ScrollPositionText"
                               Text="Scroll: 0%"
                               Classes="default"
                               FontSize="12"/>
					<TextBlock x:Name="FrameRateText"
                               Text="FPS: --"
                               Classes="default"
                               FontSize="12"/>
				</StackPanel>
			</Border>
		</Grid>
	</Grid>

	<UserControl.Styles>
		<!-- Test-specific styles -->
		<Style Selector="Button.viewTypeButton">
			<Setter Property="Padding" Value="10,5"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="Margin" Value="0"/>
		</Style>

		<Style Selector="Button.viewTypeButton.selected">
			<Setter Property="Background" Value="{DynamicResource AccentColor}"/>
		</Style>

		<Style Selector="Button.viewTypeButton:pointerover">
			<Setter Property="Background" Value="{DynamicResource SecondaryColorLighter}"/>
		</Style>

		<Style Selector="ProgressBar.loading">
			<Setter Property="Height" Value="4"/>
			<Setter Property="Background" Value="Transparent"/>
		</Style>
	</UserControl.Styles>
</UserControl>