<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:OmegaPlayer.Features.Profile.ViewModels"
        x:Class="OmegaPlayer.Features.Profile.Views.ProfileDialogView"
        x:DataType="vm:ProfileDialogViewModel"
        Width="600" Height="500"
        CanResize="False"
        WindowStartupLocation="CenterOwner"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaToDecorationsHint="True"
        SystemDecorations="None"
        Title="{Localize Profiles}">

	<Grid RowDefinitions="35,*,Auto" Background="{DynamicResource MainColor}">
		<!-- Custom Title Bar -->
		<Grid Grid.Row="0" Background="{DynamicResource MainColor}">
			<TextBlock Text="{Localize Profiles}"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Left"
                      Margin="15,0,0,0"
                      FontSize="16"/>

			<Button HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Width="35" Height="35"
                    Background="Transparent"
                    Command="{Binding CloseCommand}"
                    Classes="closeBtn"
                    Margin="0,6,3,0">
				<PathIcon Data="{StaticResource CloseIcon}"
                         Width="12" Height="12"/>
			</Button>
		</Grid>

		<!-- Main Content Area -->
		<Grid Grid.Row="1">
			<!-- Profile List -->
			<ScrollViewer IsVisible="{Binding !IsCreating}"
                         VerticalScrollBarVisibility="Auto">
				<ItemsControl ItemsSource="{Binding Profiles}"
                             Margin="20">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Button Command="{Binding $parent[ItemsControl].((vm:ProfileDialogViewModel)DataContext).SelectProfileCommand}"
                                    Width="120" Height="170"
                                    CommandParameter="{Binding}" Margin="3"
                                    Classes="profileCircleBtn">
								<Border Margin="3"
                                        Width="120" Height="170"
                                        Classes="profilePanel">
									<Grid>
										<StackPanel Spacing="8"
                                                  HorizontalAlignment="Center">
											<!-- Profile Image Container -->
											<Grid Width="120" Height="120">
												<Grid>
													<Ellipse Width="120" Height="120">
														<Ellipse.Fill>
															<ImageBrush Source="{Binding Photo}"
                                                                        Stretch="UniformToFill"
																		AlignmentX="Center"
																		AlignmentY="Center"/>
														</Ellipse.Fill>
													</Ellipse>
													<PathIcon Data="{StaticResource ProfileIcon}"
                                                             IsVisible="{Binding Photo, Converter={x:Static ObjectConverters.IsNull}}"
                                                             Width="60" Height="60"/>
												</Grid>

												<!-- Overlay Controls -->
												<StackPanel Orientation="Horizontal"
														  HorizontalAlignment="Right"
														  VerticalAlignment="Bottom"
														  Margin="5"
														  IsVisible="{Binding IsPointerOver, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}">
													<Button Classes="overlayBtn"
															Command="{Binding $parent[ItemsControl].((vm:ProfileDialogViewModel)DataContext).EditProfileCommand}"
															CommandParameter="{Binding}">
														<PathIcon Data="{StaticResource EditIcon}"
																 Width="16" Height="16"/>
													</Button>
													<Button Classes="overlayBtn"
															Command="{Binding $parent[ItemsControl].((vm:ProfileDialogViewModel)DataContext).DeleteProfileCommand}"
															CommandParameter="{Binding}">
														<PathIcon Data="{StaticResource DeleteIcon}"
																 Width="16" Height="16"/>
													</Button>
												</StackPanel>
											</Grid>

											<!-- Profile Name -->
											<TextBlock Text="{Binding ProfileName}"
                                                       Height="30"
													   Classes="text"
                                                       TextWrapping="Wrap"
                                                       HorizontalAlignment="Center"
                                                       TextTrimming="CharacterEllipsis"
                                                       MaxWidth="110"/>
										</StackPanel>
									</Grid>
								</Border>
							</Button>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</ScrollViewer>

			<!-- Create New Profile Form -->
			<StackPanel Margin="20" IsVisible="{Binding IsCreating}">
				<TextBlock Text="{Localize CreateNewProfile}"
						   IsVisible="{Binding !IsEditing}"
						   FontSize="20"
						   HorizontalAlignment="Center"
						   Margin="0,0,0,20"/>

				<TextBlock Text="{Localize EditProfile}"
						   IsVisible="{Binding IsEditing}"
						   FontSize="20"
						   HorizontalAlignment="Center"
						   Margin="0,0,0,20"/>

				<Button Classes="photoSelectBtn"
						Command="{Binding SelectProfilePhotoCommand}"
						Width="120" Height="120"
						HorizontalAlignment="Center"
						Margin="0,20,0,20">
					<Grid>
						<Ellipse Width="120" Height="120">
							<Ellipse.Fill>
								<ImageBrush Source="{Binding SelectedImage}"
										   Stretch="UniformToFill"/>
							</Ellipse.Fill>
						</Ellipse>
						<PathIcon Data="{StaticResource ProfileIcon}"
								 Width="60" Height="60"
								 IsVisible="{Binding !HasSelectedImage}"/>
					</Grid>
				</Button>

				<TextBox Watermark="{Localize ProfileNameWatermark}"
						 Text="{Binding NewProfileName}"
						 Width="300"
						 MaxLength="30"
						 Margin="0,40,0,0"/>

				<StackPanel Orientation="Horizontal"
							VerticalAlignment="Bottom"
							HorizontalAlignment="Right">
					<Button Command="{Binding SaveEditedProfileCommand}"
							IsVisible="{Binding IsEditing}"
							Classes="actionBtn save"
							Margin="0,10,10,0"/>
					<Button Command="{Binding CreateProfileCommand}"
							IsVisible="{Binding !IsEditing}"
							Classes="actionBtn"
							Margin="0,10,10,0">
						<TextBlock Text="{Localize Create}"
								   HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Button>
					<Button Command="{Binding CancelCreateCommand}"
							Classes="actionBtn"
							Margin="0,10,10,0">
						<TextBlock Text="{Localize Cancel}"
								   HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Button>
				</StackPanel>
			</StackPanel>
		</Grid>

		<!-- Bottom Buttons -->
		<StackPanel Grid.Row="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Margin="15"
                    IsVisible="{Binding !IsCreating}">
			<Button Command="{Binding ShowCreateFormCommand}"
                    Classes="actionBtn" 
                    Margin="0,0,10,0">
				<TextBlock Text="{Localize CreateNewProfile}"
						   HorizontalAlignment="Center" VerticalAlignment="Center"/>
			</Button>
			<Button Command="{Binding CloseCommand}"
                    Classes="actionBtn">
				<TextBlock Text="{Localize Cancel}"
						   HorizontalAlignment="Center" VerticalAlignment="Center"/>
			</Button>

		</StackPanel>
	</Grid>

	<Window.Styles>
		<!-- Close Button -->
		<Style Selector="Button.closeBtn:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="Red"/>
		</Style>

		<!-- Profile Button -->
		<Style Selector="Button.profileBtn">
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
			<Setter Property="Width" Value="260"/>
			<Setter Property="Height" Value="50"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
		</Style>

		<Style Selector="Button.profileBtn:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource AccentColor}"/>
		</Style>

		<!-- Overlay Buttons -->
		<Style Selector="Button.overlayBtn">
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
			<Setter Property="Width" Value="30"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Margin" Value="3,0"/>
		</Style>

		<Style Selector="Button.overlayBtn:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource MainColor}"/>
		</Style>

		<!-- Action Buttons -->
		<Style Selector="Button.actionBtn">
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
			<Setter Property="Height" Value="35"/>
			<Setter Property="MinWidth" Value="100"/>
		</Style>

		<Style Selector="Button.actionBtn:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
		</Style>

		<Style Selector="Border.profilePanel">
			<Setter Property="Background" Value="{DynamicResource MainColor}"/>
			<Setter Property="CornerRadius" Value="5"/>
		</Style>

		<Style Selector="Border.profilePanel:pointerover">
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
		</Style>

		<!-- Profile Circle Button -->
		<Style Selector="Button.profileCircleBtn">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="CornerRadius" Value="5"/>
			<Setter Property="Width" Value="120"/>
			<Setter Property="Height" Value="120"/>
		</Style>

		<Style Selector="Button.profileCircleBtn:pointerover">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Opacity" Value="0.8"/>
		</Style>

		<!-- Add Profile Photo Button -->
		<Style Selector="Button.photoSelectBtn">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
			<Setter Property="BorderThickness" Value="2"/>
			<Setter Property="CornerRadius" Value="60"/>
		</Style>

		<Style Selector="Button.photoSelectBtn:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Opacity" Value="0.8"/>
		</Style>

		<!-- Text color -->
		<Style Selector="PathIcon">
			<Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
		</Style>

		<Style Selector="TextBlock">
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
		</Style>

		<Style Selector="Button">
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
		</Style>

		<!-- TextBox Borders -->
		<Style Selector="TextBox">
			<Setter Property="BorderBrush" Value="{DynamicResource SecondaryColor}"/>
			<Setter Property="Background" Value="Transparent"/>
		</Style>


		<Style Selector="TextBox:focus-within /template/ Border">
			<Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
		</Style>

		<Style Selector="TextBox:pointerover /template/ Border">
			<Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
		</Style>

		<!--Save button with Icon-->
		<Style Selector="Button.save">
			<Setter Property="Content">
				<Template>
					<StackPanel Orientation="Horizontal" Spacing="5"
								HorizontalAlignment="Center" VerticalAlignment="Center">
						<PathIcon Data="{StaticResource SaveEmptyIcon}"
								  Foreground="{DynamicResource TextColor}"/>
						<TextBlock Text="{Localize Save}"/>
					</StackPanel>
				</Template>
			</Setter>
		</Style>
		<Style Selector="Button.save:pointerover">
			<Setter Property="Content">
				<Template>
					<StackPanel Orientation="Horizontal" Spacing="5"
								HorizontalAlignment="Center" VerticalAlignment="Center">
						<PathIcon Data="{StaticResource SaveFilledIcon}"
								  Foreground="{DynamicResource TextColor}"/>
						<TextBlock Text="{Localize Save}"/>
					</StackPanel>
				</Template>
			</Setter>
		</Style>
	</Window.Styles>
</Window>