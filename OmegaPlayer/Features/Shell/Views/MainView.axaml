<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:OmegaPlayer.Features.Shell.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:views="clr-namespace:OmegaPlayer.Features.Playback.Views"
        xmlns:view="clr-namespace:OmegaPlayer.Features.Search.Views"
		xmlns:helpers="clr-namespace:OmegaPlayer.UI.Helpers"
        xmlns:converters="using:OmegaPlayer.UI.Converters"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="OmegaPlayer.Features.Shell.Views.MainView"
        x:DataType="vm:MainViewModel"
        Icon="avares://OmegaPlayer/Resources/Assets/avalonia-logo.ico"
        MinWidth="850" MinHeight="300"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaTitleBarHeightHint="-1"
        WindowStartupLocation="CenterScreen"
        Title="OmegaPlayer">

	<Window.Resources>
		<converters:WindowStateToMarginConverter x:Key="WindowStateToMarginConverter"/>
	</Window.Resources>

	<Grid VerticalAlignment="Stretch" 
		  Background="{DynamicResource SecondaryColor}">
		<Grid.RowDefinitions>
			<RowDefinition Height="35"/>
			<RowDefinition Height="Auto"/>
			<!-- Top Navigation Bar -->
			<RowDefinition Height="*"/>
			<!-- Main Content -->
			<RowDefinition Height="175" MinHeight="175" MaxHeight="175"/>
			<!-- Player Controls -->
		</Grid.RowDefinitions>

		<!-- Title Bar -->
		<Grid Name="CussstomTitleBar"
              Grid.Row="0"
              VerticalAlignment="Top"
              Background="{DynamicResource MainColor}"
              IsHitTestVisible="True"
			  helpers:WindowProperties.IsWindowed="True"
			  Margin="{Binding WindowState, 
              RelativeSource={RelativeSource AncestorType=Window}, 
              Converter={StaticResource WindowStateToMarginConverter},
              ConverterParameter=titleBar}"
              PointerPressed="CussstomTitleBar_PointerPressed">

			<Grid.Styles>
				<Style Selector="Grid">
					<Setter Property="Margin" Value="0"/>
				</Style>
				<Style Selector="Grid.maximized">
					<Setter Property="Margin" Value="8,8,8,8"/>
				</Style>
			</Grid.Styles>

			<!-- Search Area -->
			<StackPanel HorizontalAlignment="Left"
						Background="Transparent"
						Orientation="Horizontal"
						Margin="5,5,5,0">

				<!-- Toggle Search Button -->
				<Button Classes="titleBarButton withHover"
						Width="35"
						Height="28"
						Command="{Binding ToggleSearchBoxCommand}">
					<PathIcon Data="{Binding SearchToggleIcon}"
							 Classes="searchPathIcon"
							 Classes.IsCloseIcon="{Binding ShowSearchBox}"/>
				</Button>

				<!-- Search Box -->
				<TextBox Width="{Binding SearchBoxWidth}"
						 MinHeight="25"
						 Opacity="{Binding SearchBoxOpacity}"
						 Text="{Binding SearchViewModel.SearchQuery}"
						 IsVisible="{Binding ShowSearchBox}"
						 Watermark="Search..."
						 TextChanged="OnSearchTextChanged"
						 KeyDown="OnSearchKeyDown">
					<TextBox.Transitions>
						<Transitions>
							<DoubleTransition Property="Width" Duration="0:0:0.1"/>
							<DoubleTransition Property="Opacity" Duration="0:0:0.1"/>
						</Transitions>
					</TextBox.Transitions>
					<TextBox.InnerRightContent>
						<Button Classes="searchButton"
								Command="{Binding SearchViewModel.SearchCommand}">
							<PathIcon Data="{StaticResource SearchIcon}"
									 Classes="viewIcon"
									 Width="17"
									 Height="17"/>
						</Button>
					</TextBox.InnerRightContent>
					<TextBox.Styles>
						<Style Selector="TextBox">
							<Setter Property="BorderBrush" Value="{DynamicResource SecondaryColor}"/>
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
							<Setter Property="Margin" Value="0"/>
						</Style>
						
						<Style Selector="TextBox:focus-within /template/ Border">
							<Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
							<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
						</Style>

						<Style Selector="TextBox:pointerover /template/ Border">
							<Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
							<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
						</Style>
						
						<Style Selector="Button.searchButton">
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="BorderThickness" Value="0"/>
							<Setter Property="Padding" Value="8"/>
							<Setter Property="Margin" Value="0"/>
						</Style>
						<Style Selector="Button.searchButton:pointerover /template/ ContentPresenter">
							<Setter Property="Background" Value="{DynamicResource TextColor}"/>
						</Style>
					</TextBox.Styles>
				</TextBox>

				<!-- Search Preview Flyout / IsLightDismissEnabled = "True" causes to popup never open again-->
				<Popup IsOpen="{Binding SearchViewModel.ShowSearchFlyout}"
					   PlacementMode="RightEdgeAlignedBottom"
					   IsLightDismissEnabled ="True"
					   OverlayDismissEventPassThrough="True"
					   PlacementTarget="{Binding RelativeSource={RelativeSource Self}}"
					   Closed="OnSearchPopupClosed">
					<ContentControl Content="{Binding SearchViewModel}">
						<ContentControl.ContentTemplate>
							<DataTemplate>
								<view:SearchPreview/>
							</DataTemplate>
						</ContentControl.ContentTemplate>
					</ContentControl>
				</Popup>
			</StackPanel>

			<StackPanel HorizontalAlignment="Right"
						Background="Transparent"
						Orientation="Horizontal"
						Margin="0,5,5,0">
				<!-- Profile Button -->
				<Button Classes="titleBarButton NoHover"
						Width="30"
						CornerRadius="15"
						Command="{Binding OpenProfileDialogCommand}"
						Margin="0,0,10,0">
					<Grid>
						<!-- Default Profile Icon -->
						<PathIcon Data="{StaticResource ProfileIcon}"
								 Width="20" Height="20"
								 Classes="viewIcon"
								 IsVisible="{Binding CurrentProfilePhoto, Converter={x:Static ObjectConverters.IsNull}}"/>

						<!-- Profile Photo -->
						<Ellipse Width="30" Height="30"
								 IsVisible="{Binding CurrentProfilePhoto, Converter={x:Static ObjectConverters.IsNotNull}}">
							<Ellipse.Fill>
								<ImageBrush Source="{Binding CurrentProfilePhoto}"
										   Stretch="UniformToFill"/>
							</Ellipse.Fill>
						</Ellipse>
					</Grid>
				</Button>

				<Button Classes="titleBarButton NoHover" 
						Width="30" CornerRadius="15" Margin="0,0,140,0"
						Command="{Binding NavigateCommand}"
						CommandParameter="Config">
					<PathIcon Data="{StaticResource ConfigIcon}" Width="20" Height="20"
                                 Classes="viewIcon"/>
				</Button>
			</StackPanel>

		</Grid>

		<Grid Grid.Row="1"
              Classes="topBar"
              Classes.collapsed="{Binding !IsExpanded}" MaxHeight="110"
              Background="{DynamicResource  MainColor}">
			<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
				<!-- Navigation Icons -->
				<RowDefinition Height="50"/>
				<!-- Hide/Show Button -->
			</Grid.RowDefinitions>

			<Grid Grid.Row="0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<!-- View Type Toggles -->
					<ColumnDefinition Width="Auto"/>
					<!-- Navigation Icons -->
					<ColumnDefinition Width="*"/>
					<!-- Sorting Controls -->
				</Grid.ColumnDefinitions>



				<!-- Main Navigation Icons (Center) -->
				<StackPanel Grid.Column="1"
                          Orientation="Horizontal"
                          HorizontalAlignment="Center"
                          Margin="0,30,0,5">
					<!-- Navigation Buttons -->
					<Button Classes="navButton NoHover"
                            Classes.small="{Binding !IsExpanded}"
                            Command="{Binding NavigateCommand}"
                            CommandParameter="Home">
						<PathIcon Data="{StaticResource HomeIcon}"
								  Classes="navButton"
								  Classes.small="{Binding !IsExpanded}"/>
					</Button>

					<Button Classes="navButton NoHover"
                            Classes.small="{Binding !IsExpanded}"
                            Command="{Binding NavigateCommand}"
                            CommandParameter="Library">
						<PathIcon Data="{StaticResource AllTracksIcon}"
								  Classes="navButton"
								  Classes.small="{Binding !IsExpanded}"/>
					</Button>

					<Button Classes="navButton NoHover"
                            Classes.small="{Binding !IsExpanded}"
                            Command="{Binding NavigateCommand}"
                            CommandParameter="Artists">
						<PathIcon Data="{StaticResource ArtistIconV2}"
								  Classes="navButton"
								  Classes.small="{Binding !IsExpanded}"/>
					</Button>

					<Button Classes="navButton NoHover"
                            Classes.small="{Binding !IsExpanded}"
                            Command="{Binding NavigateCommand}"
                            CommandParameter="Albums">
						<PathIcon Data="{StaticResource AlbumIcon}"
								  Classes="navButton"
								  Classes.small="{Binding !IsExpanded}"/>
					</Button>

					<Button Classes="navButton NoHover"
                            Classes.small="{Binding !IsExpanded}"
                            Command="{Binding NavigateCommand}"
                            CommandParameter="Playlists">
						<PathIcon Data="{StaticResource PlaylistIcon}"
								  Classes="navButton"
								  Classes.small="{Binding !IsExpanded}"/>
					</Button>

					<Button Classes="navButton NoHover"
                            Classes.small="{Binding !IsExpanded}"
                            Command="{Binding NavigateCommand}"
                            CommandParameter="Genres">
						<PathIcon Data="{StaticResource GenreIconV2}"
								  Classes="navButton"
								  Classes.small="{Binding !IsExpanded}"/>
					</Button>

					<Button Classes="navButton NoHover"
                            Classes.small="{Binding !IsExpanded}"
                            Command="{Binding NavigateCommand}"
                            CommandParameter="Folders">
						<PathIcon Data="{StaticResource FolderIcon}"
								  Classes="navButton"
								  Classes.small="{Binding !IsExpanded}"/>
					</Button>
				</StackPanel>

			</Grid>

			<!-- View Type Toggle Buttons (Left Side) -->
			<Button IsVisible="{Binding ShowBackButton}"
					Command="{Binding NavigateCommand}"
					CommandParameter="Library"
					Margin="5 0 0 0"
					Width="30" Height="30">
				<PathIcon Data="{StaticResource ArrowDownIcon}"
						  Margin="0 0 3 0"
						  Classes="backIcon"/>
			</Button>
			<StackPanel Grid.Column="0" Grid.Row="1"
						Orientation="Horizontal" Height="50"
						HorizontalAlignment="Left"
						Spacing="5"
						Margin="0,0,0,5"
						IsVisible="{Binding ShowViewTypeButtons}">
				<Button Classes="viewTypeButton NoHover" Margin="15,0,0,0"
						Command="{Binding SetViewTypeCommand}"
						CommandParameter="List">
					<PathIcon Data="{StaticResource TypeListIcon}"
							 Classes="viewIcon"
							 Classes.active="{Binding CurrentViewType, 
                               Converter={x:Static ObjectConverters.Equal}, 
                               ConverterParameter=List}"/>
				</Button>
				<Button Classes="viewTypeButton NoHover"
						Command="{Binding SetViewTypeCommand}"
						CommandParameter="Card">
					<PathIcon Data="{StaticResource TypeCardIcon}"
							 Classes="viewIcon"
							 Classes.active="{Binding CurrentViewType, 
                               Converter={x:Static ObjectConverters.Equal}, 
                               ConverterParameter=Card}"/>
				</Button>
				<Button Classes="viewTypeButton NoHover"
						Command="{Binding SetViewTypeCommand}"
						CommandParameter="Image">
					<PathIcon Data="{StaticResource TypeImageIcon}"
							 Classes="viewIcon"
							 Classes.active="{Binding CurrentViewType, 
                               Converter={x:Static ObjectConverters.Equal}, 
                               ConverterParameter=Image}"/>
				</Button>
				<Button Classes="viewTypeButton NoHover"
						Command="{Binding SetViewTypeCommand}"
						CommandParameter="RoundImage">
					<PathIcon Data="{StaticResource TypeRoundImageIcon}"
							 Classes="viewIcon"
							 Classes.active="{Binding CurrentViewType, 
                               Converter={x:Static ObjectConverters.Equal}, 
                               ConverterParameter=RoundImage}"/>
				</Button>
			</StackPanel>

			<!-- Sorting Controls Panel -->
			<StackPanel Grid.Column="0" Grid.Row="1"
						Orientation="Horizontal"
						HorizontalAlignment="Right"
						VerticalAlignment="Center"
						Margin="0,10,10,5"
						IsVisible="{Binding ShowSortingControls}">

				<!-- Custom Sort Dropdown Button -->
				<Button Name="SortDropdownButton"
						Classes="sortDropdownButton"
						Click="OnSortDropdownButtonClick">
					<StackPanel Orientation="Horizontal" Spacing="6">
						<TextBlock Text="{Binding SelectedSortTypeText}"
								   Foreground="{DynamicResource TextColor}"
								   VerticalAlignment="Center"/>
						<PathIcon Data="{StaticResource ArrowDownIcon}"
								  Width="12" Height="12"
								  Foreground="{DynamicResource TextColor}"
								  RenderTransform="{Binding SortIconTransform}"/>
					</StackPanel>
				</Button>

				<!-- Dropdown Popup -->
				<Popup Name="SortPopup"
					   PlacementTarget="{Binding #SortDropdownButton}"
					   PlacementMode="Bottom"
					   IsLightDismissEnabled="True"
					   Width="200">
					<Border Background="{DynamicResource MainColor}"
							BorderBrush="{DynamicResource AccentColor}"
							BorderThickness="1"
							CornerRadius="4"
							Padding="0">
						<StackPanel>
							<!-- Sort Type Header -->
							<Border Background="{DynamicResource SecondaryColor}"
									Padding="3">
								<TextBlock Text="Sort by" Classes="sortHeader"/>
							</Border>

							<!-- Sort Type Options -->
							<RadioButton Content="Name"
										 GroupName="SortType"
										 IsChecked="{Binding IsTempSortTypeName}"
										 IsVisible="{Binding ShowNameSortOption}"
										 Command="{Binding SetTempSortTypeCommand}"
										 CommandParameter="Name"/>

							<RadioButton Content="Artist"
										 GroupName="SortType"
										 IsChecked="{Binding IsTempSortTypeArtist}"
										 IsVisible="{Binding ShowArtistSortOption}"
										 Command="{Binding SetTempSortTypeCommand}"
										 CommandParameter="Artist"/>

							<RadioButton Content="Album"
										 GroupName="SortType"
										 IsChecked="{Binding IsTempSortTypeAlbum}"
										 IsVisible="{Binding ShowAlbumSortOption}"
										 Command="{Binding SetTempSortTypeCommand}"
										 CommandParameter="Album"/>

							<RadioButton Content="Duration"
										 GroupName="SortType"
										 IsChecked="{Binding IsTempSortTypeDuration}"
										 IsVisible="{Binding ShowDurationSortOption}"
										 Command="{Binding SetTempSortTypeCommand}"
										 CommandParameter="Duration"/>
							
							<RadioButton Content="Genre"
										 GroupName="SortType"
										 IsChecked="{Binding IsTempSortTypeGenre}"
										 IsVisible="{Binding ShowGenreSortOption}"
										 Command="{Binding SetTempSortTypeCommand}"
										 CommandParameter="Genre"/>
							
							<RadioButton Content="Release Date"
										 GroupName="SortType"
										 IsChecked="{Binding IsTempSortTypeReleaseDate}"
										 IsVisible="{Binding ShowReleaseDateSortOption}"
										 Command="{Binding SetTempSortTypeCommand}"
										 CommandParameter="ReleaseDate"/>

							<!-- Direction Header -->
							<Border Background="{DynamicResource SecondaryColor}"
									Padding="3">
								<TextBlock Text="Direction" Classes="sortHeader"/>
							</Border>

							<!-- Direction Options -->
							<RadioButton Content="Ascending (A-Z)"
										 GroupName="SortDirection"
										 IsChecked="{Binding IsTempSortDirectionAscending}"
										 Command="{Binding SetTempSortDirectionCommand}"
										 CommandParameter="Ascending"/>

							<RadioButton Content="Descending (Z-A)"
										 GroupName="SortDirection"
										 IsChecked="{Binding IsTempSortDirectionDescending}"
										 Command="{Binding SetTempSortDirectionCommand}"
										 CommandParameter="Descending"/>

							<!-- Apply Button -->
							<Button Content="Apply Sorting"
									Foreground="{DynamicResource TextColor}"
									Command="{Binding ApplySortCommand}"
									Click="OnApplyButtonClick"
									Classes="applyButton"
									Margin="10"
									HorizontalAlignment="Stretch"
									HorizontalContentAlignment="Center"/>
						</StackPanel>
					</Border>
				</Popup>
			</StackPanel>


			<!-- Hide/Show Button -->
			<Button Grid.Row="1"
                    Classes="toggleButton NoHover"
                    HorizontalAlignment="Center"
					VerticalAlignment="Top"
                    Command="{Binding ToggleNavigationCommand}">
				<PathIcon Classes="toggleIcon"
                         Classes.collapsed="{Binding !IsExpanded}"
                         Data="{StaticResource ArrowDownIcon}"/>
			</Button>
		</Grid>

		<!-- Main Content Area -->
		<Border Grid.Row="2"
				Background="Transparent"
				Margin="{Binding WindowState, 
                RelativeSource={RelativeSource AncestorType=Window}, 
                Converter={StaticResource WindowStateToMarginConverter},
                ConverterParameter=content}">
			<Grid>

				<ScrollViewer x:Name="MainScrollViewer"
							  Margin="0 0 0 10"
                             VerticalScrollBarVisibility="Visible"
                             HorizontalScrollBarVisibility="Disabled"
                             ScrollChanged="MainScrollViewer_ScrollChanged">
					<TransitioningContentControl Content="{Binding CurrentPage}"/>
				</ScrollViewer>
			</Grid>
		</Border>

		<!-- Player Controls -->
		<views:TrackControlView Grid.Row="3"
								Margin="{Binding WindowState, 
								RelativeSource={RelativeSource AncestorType=Window}, 
								Converter={StaticResource WindowStateToMarginConverter},
								ConverterParameter=track}"
								BorderThickness="0 2 0 0"
								Height="175"
								VerticalAlignment="Bottom"
								DataContext="{Binding TrackControlViewModel}"/>
		
		<Border IsVisible="{Binding ShowFloatingButtons}"
				Grid.Row="2"
				HorizontalAlignment="Right"
				VerticalAlignment="Top"
				Margin="0,20,20,0"
				ZIndex="1000">
			<StackPanel Orientation="Horizontal"
						Spacing="10">
				<Button Command="{Binding ExecuteSaveReorderCommand}"
						Classes="actionButton save"/>
				<Button Command="{Binding ExecuteCancelReorderCommand}"
						Classes="actionButton">
					<StackPanel Orientation="Horizontal" Spacing="5">
						<PathIcon Data="{StaticResource CloseIcon}"
								  Width="15" Height="15"
								 Foreground="Red"/>
						<TextBlock Text="Cancel"/>
					</StackPanel>
				</Button>
			</StackPanel>
		</Border>
	</Grid>

	<Window.Styles>

		<!-- Sort Dropdown styles -->
		<Style Selector="Button.sortDropdownButton">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="CornerRadius" Value="4"/>
			<Setter Property="Padding" Value="10,5"/>
			<Setter Property="Margin" Value="0"/>
		</Style>

		<Style Selector="Button.sortDropdownButton:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
		</Style>

		<Style Selector="Button.applyButton">
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
			<Setter Property="Padding" Value="10,8"/>
		</Style>

		<Style Selector="Button.applyButton:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
		</Style>

		<Style Selector="TextBlock.sortHeader">
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="FontSize" Value="14"/>
		</Style>

		<!-- Radio Button styles -->
		<Style Selector="RadioButton">
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
			<Setter Property="Margin" Value="10,5"/>
		</Style>

		<Style Selector="RadioButton:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
		</Style>
		
		<Style Selector="RadioButton:pressed /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
		</Style>
		
		<Style Selector="RadioButton /template/ Ellipse#OuterEllipse">
			<Setter Property="Stroke" Value="{DynamicResource TextColor}"/>
		</Style>

		<Style Selector="RadioButton:unchecked /template/ Ellipse#OuterEllipse">
			<Setter Property="Stroke" Value="{DynamicResource TextColor}"/>
		</Style>
		
		<Style Selector="RadioButton:checked /template/ Ellipse#OuterEllipse">
			<Setter Property="Stroke" Value="{DynamicResource TextColor}"/>
			<Setter Property="Fill" Value="{DynamicResource TextColor}"/>
		</Style>

		<Style Selector="RadioButton:pointerover /template/ Ellipse#OuterEllipse">
			<Setter Property="Stroke" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Fill" Value="Transparent"/>
		</Style>

		<Style Selector="RadioButton:pressed /template/ Ellipse#OuterEllipse">
			<Setter Property="Stroke" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Fill" Value="Transparent"/>
		</Style>

		<Style Selector="RadioButton:checked /template/ Ellipse#CheckOuterEllipse">
			<Setter Property="Stroke" Value="{DynamicResource TextColor}"/>
			<Setter Property="Fill" Value="{DynamicResource TextColor}"/>
		</Style>

		<Style Selector="RadioButton:checked /template/ Ellipse#CheckGlyph">
			<Setter Property="Stroke" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Fill" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Width" Value="16"/>
			<Setter Property="Height" Value="16"/>
		</Style>

		<!-- Toggle Top Bar Button Styles -->
		<Style Selector="Button.toggleButton">
			<Setter Property="Width" Value="25"/>
			<Setter Property="Height" Value="15"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Margin" Value="0 25 0 0"/>
			<Setter Property="BorderThickness" Value="0"/>
		</Style>

		<!-- Toggle Top Bar Path Styles -->
		<Style Selector="PathIcon.toggleIcon">
			<Setter Property="Width" Value="15"/>
			<Setter Property="Height" Value="15"/>
			<Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
			<Setter Property="RenderTransform" Value="rotate(180deg)"/>
			<Setter Property="Transitions">
				<Transitions>
					<TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2"/>
				</Transitions>
			</Setter>
		</Style>

		<Style Selector="PathIcon.toggleIcon.collapsed">
			<Setter Property="RenderTransform" Value="rotate(0deg)"/>
		</Style>

		<!-- Toggle Top Bar Path Styles -->
		<Style Selector="PathIcon.backIcon">
			<Setter Property="Width" Value="15"/>
			<Setter Property="Height" Value="15"/>
			<Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
			<Setter Property="RenderTransform" Value="rotate(90deg)"/>
		</Style>

		<Style Selector="ComboBox">
			<Setter Property="MinHeight" Value="30"/>
			<Setter Property="FontSize" Value="15"/>
			<Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Transitions">
				<Transitions>
					<DoubleTransition Property="Height" Duration="0:0:0.2"/>
				</Transitions>
			</Setter>
		</Style>

		<Style Selector="ComboBox.small">
			<Setter Property="MinHeight" Value="10"/>
			<Setter Property="FontSize" Value="12"/>
		</Style>

		<!-- Navigation Button Path Styles -->
		<Style Selector="PathIcon.navButton">
			<Setter Property="Width" Value="30"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Margin" Value="5,0"/>
			<Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Transitions">
				<Transitions>
					<DoubleTransition Property="Width" Duration="0:0:0.2"/>
					<DoubleTransition Property="Height" Duration="0:0:0.2"/>
				</Transitions>
			</Setter>
		</Style>

		<!-- Small Navigation Button Path Style -->
		<Style Selector="PathIcon.navButton.small">
			<Setter Property="Width" Value="20"/>
			<Setter Property="Height" Value="20"/>
		</Style>

		<!-- Navigation Button Styles -->
		<Style Selector="Button.navButton">
			<Setter Property="Width" Value="38"/>
			<Setter Property="Height" Value="38"/>
			<Setter Property="Margin" Value="10,0"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Transitions">
				<Transitions>
					<DoubleTransition Property="Width" Duration="0:0:0.2"/>
					<DoubleTransition Property="Height" Duration="0:0:0.2"/>
				</Transitions>
			</Setter>
		</Style>

		<!-- Small Navigation Button Style -->
		<Style Selector="Button.navButton.small">
			<Setter Property="Width" Value="32"/>
			<Setter Property="Height" Value="32"/>
		</Style>
		
		<Style Selector="Button.NoHover:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
		</Style>

		<Style Selector="Button.withHover:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource TextColor}"/>
		</Style>

		<!-- View Type Button Styles -->
		<Style Selector="Button.viewTypeButton">
			<Setter Property="Width" Value="32"/>
			<Setter Property="Height" Value="32"/>
			<Setter Property="Margin" Value="0,0,5,0"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
		</Style>

		<!-- View Icon Styles -->
		<Style Selector="PathIcon.viewIcon">
			<Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
		</Style>

		<Style Selector="PathIcon.viewIcon.active">
			<Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
		</Style>


		<!-- Title Bar Styles -->
		<Style Selector="Button.titleBarButton">
			<Setter Property="Width" Value="30"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Margin" Value="2"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
		</Style>


		<!-- Top Bar Styles -->
		<Style Selector="Grid.topBar">
			<Setter Property="Height" Value="110"/>
			<Setter Property="Transitions">
				<Transitions>
					<DoubleTransition Property="Height" Duration="0:0:0.2"/>
				</Transitions>
			</Setter>
		</Style>

		<Style Selector="Grid.topBar.collapsed">
			<Setter Property="Height" Value="70"/>
		</Style>

		<!-- Sorting Button Styles -->
		<Style Selector="SplitButton.sortButton">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontSize" Value="14"/>
		</Style>

		<Style Selector="MenuItem">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Padding" Value="10,5"/>
		</Style>

		<Style Selector="PathIcon">
			<Setter Property="Foreground" Value="#1ED760"/>
		</Style>
		
		<!-- Search/ Close Icon Styles -->
		<Style Selector="PathIcon.searchPathIcon">
			<Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Width" Value="20"/>
			<Setter Property="Height" Value="20"/>
		</Style>

		<Style Selector="PathIcon.searchPathIcon.IsCloseIcon">
			<Setter Property="Foreground" Value="Red"/>
			<Setter Property="Width" Value="15"/>
			<Setter Property="Height" Value="15"/>
		</Style>
		
		<!-- TextBox Borders -->
		<Style Selector="TextBox">
			<Setter Property="BorderBrush" Value="{DynamicResource SecondaryColor}"/>
		</Style>

		<Style Selector="TextBox:focus /template/ Border">
			<Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
		</Style>

		<Style Selector="TextBox:pointerover /template/ Border">
			<Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
		</Style>

		<!-- Floating Reorder buttons -->
		<Style Selector="Button.actionButton">
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="CornerRadius" Value="25"/>
		</Style>

		<Style Selector="Button.actionButton:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource AccentColor}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
		</Style>

		<Style Selector="Button.save">
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="CornerRadius" Value="25"/>
			<Setter Property="Content">
				<Template>
					<StackPanel Orientation="Horizontal" Spacing="5">
						<PathIcon Data="{StaticResource SaveEmptyIcon}"/>
						<TextBlock Text="Save Order"/>
					</StackPanel>
				</Template>
			</Setter>
		</Style>
		<Style Selector="Button.save:pointerover">
			<Setter Property="Content">
				<Template>
					<StackPanel Orientation="Horizontal" Spacing="5">
						<PathIcon Data="{StaticResource SaveFilledIcon}"/>
						<TextBlock Text="Save Order"/>
					</StackPanel>
				</Template>
			</Setter>
		</Style>
		
	</Window.Styles>
</Window>