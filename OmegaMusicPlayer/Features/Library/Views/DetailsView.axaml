<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="using:OmegaMusicPlayer.UI.Controls.TrackDisplay"
             xmlns:vm="using:OmegaMusicPlayer.Features.Library.ViewModels"
             xmlns:helpers="using:OmegaMusicPlayer.UI.Controls.Helpers"
             x:Class="OmegaMusicPlayer.Features.Library.Views.DetailsView"
             x:DataType="vm:DetailsViewModel">

	<Grid>
		<!-- Main content layout with Grid instead of StackPanel -->
		<Grid.RowDefinitions>
			<!-- Header -->
			<RowDefinition Height="Auto"/>
			<!-- Content area - expands to fill space -->
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<!-- Border around Header -->
		<Border Classes="headerBorder">

			<!-- Adaptive Header -->
			<Grid Grid.Row="0"
				  Name="HeaderGrid"
				  Classes="header"
				  Background="{DynamicResource MainColor}"
				  IsVisible="{Binding !IsReorderMode}"
				  Margin="0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>

				<!-- Content Image -->
				<Border x:Name="ImageBorder"
						Grid.Column="0"
						Classes.RoundImageBorder="{Binding IsArtistContent}">
					<Grid>
						<Border x:Name="ImageClipBorder"
								CornerRadius="{Binding #ImageBorder.CornerRadius}"
								ClipToBounds="True">
							<Image Source="{Binding Image}"
								   Stretch="UniformToFill"/>
						</Border>
						<PathIcon Data="{Binding DetailsIcon}"
								  Width="60" Height="60"
								  Classes="default"
								  IsVisible="{Binding Image, Converter={x:Static ObjectConverters.IsNull}}"/>
					</Grid>
				</Border>

				<!-- Title and Description -->
				<StackPanel Grid.Column="1"
							ClipToBounds="True"
							VerticalAlignment="Center"
							HorizontalAlignment="Stretch">
					<TextBlock Text="{Binding ContentTypeText}"
							   Classes="HeaderContentType default"
							   Margin="0 0 0 40"
							   Opacity="0.7"/>
					<helpers:CustomTextBlock x:Name="TitleBlock"
											 Text="{Binding Title}"
											 Classes="HeaderTitle default"
											 HorizontalAlignment="Left"
											 ClipToBounds="False"
											 Margin="0 0 0 0"/>
					<TextBlock Text="{Binding Description}"
							   HorizontalAlignment="Left"
							   Classes="default"
							   Margin="0 40 0 0"
							   TextWrapping="Wrap"
							   Opacity="0.9"/>
				</StackPanel>

				<!-- Header Buttons -->
				<WrapPanel x:Name="HeaderPanel"
						   Grid.Column="1"
						   MaxWidth="800"
						   Height="40"
						   Orientation="Horizontal"
						   HorizontalAlignment="Right"
						   VerticalAlignment="Bottom"
						   Margin="0 0 10 10" >
					<!-- Main Play Button -->
					<Button Command="{Binding PlayAllOrSelectedCommand}"
							Classes="headerButton"
							ToolTip.Tip="{Binding PlayButtonText}"
							IsVisible="{Binding !IsReorderMode}">
						<PathIcon Data="{StaticResource PlayIcon}" Classes="default"/>
					</Button>

					<!-- Select All -->
					<Button Command="{Binding SelectAllCommand}"
							ToolTip.Tip="{Localize SelectAll}"
							IsVisible="{Binding HasSelectedTracks}"
							Classes="headerButton">
						<PathIcon Data="{StaticResource SelectAllIcon}" Classes="default"/>
					</Button>

					<!-- Deselect All -->
					<Button Command="{Binding ClearSelectionCommand}"
							ToolTip.Tip="{Localize DeselectAll}"
							IsVisible="{Binding HasSelectedTracks}"
							Classes="headerButton">
						<PathIcon Data="{StaticResource DeselectAllIcon}" Classes="default"/>
					</Button>
					
					<!-- Play Next - Not for NowPlaying -->
					<Button Command="{Binding PlayNextTracksCommand}"
							Classes="headerButton"
							ToolTip.Tip="{Localize PlayNext}">
						<Button.IsVisible>
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="!IsNowPlayingContent"/>
								<Binding Path="HasSelectedTracks"/>
							</MultiBinding>
						</Button.IsVisible>
						<PathIcon Data="{StaticResource PlayNextTrackIcon}" Classes="default"/>
					</Button>

					<!-- Add to Queue - Not for NowPlaying -->
					<Button Command="{Binding AddToQueueCommand}"
							Classes="headerButton"
							ToolTip.Tip="{Localize AddToQueue}">
						<Button.IsVisible>
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="!IsNowPlayingContent"/>
								<Binding Path="HasSelectedTracks"/>
							</MultiBinding>
						</Button.IsVisible>
						<PathIcon Data="{StaticResource AddTrackToQueueIcon}" Classes="default"/>
					</Button>

					<!-- Add to Playlist -->
					<Button Command="{Binding ShowPlaylistSelectionDialogCommand}"
							ToolTip.Tip="{Localize AddToPlaylist}"
							Classes="headerButton">
						<Button.IsVisible>
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="!IsNowPlayingContent"/>
								<Binding Path="!IsReorderMode"/>
								<Binding Path="HasSelectedTracks"/>
							</MultiBinding>
						</Button.IsVisible>
						<PathIcon Data="{StaticResource AddTrackIcon}" Classes="default"/>
					</Button>
					
					<!-- Randomize - Not for NowPlaying -->
					<Button Command="{Binding RandomizeTracksCommand}"
							Classes="headerButton"
							ToolTip.Tip="{Localize Randomize}"
							IsVisible="{Binding !IsNowPlayingContent, Mode=OneWay}">
						<PathIcon Data="{StaticResource ShuffleOnIcon}" Classes="default"/>
					</Button>

					<!-- Clear Queue Button - For NowPlaying only -->
					<Button Command="{Binding ClearQueueCommand}"
							IsVisible="{Binding IsNowPlayingContent}"
							ToolTip.Tip="{Localize ClearQueue}"
							Classes="headerButton">
						<StackPanel Orientation="Horizontal" Spacing="5">
							<PathIcon Data="{StaticResource ClearIcon}" Classes="default"/>
						</StackPanel>
					</Button>

					<!-- Edit Order Button - For Playlist and NowPlaying only -->
					<Button Command="{Binding EnterReorderModeCommand}"
							ToolTip.Tip="{Localize EditOrder}"
							Classes="headerButton">
						<Button.IsVisible>
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<MultiBinding Converter="{x:Static BoolConverters.Or}">
									<Binding Path="IsPlaylistContent"/>
									<Binding Path="IsNowPlayingContent"/>
								</MultiBinding>
								<Binding Path="!IsReorderMode"/>
							</MultiBinding>
						</Button.IsVisible>
						<StackPanel Orientation="Horizontal" Spacing="5">
							<PathIcon Data="{StaticResource EditIcon}" Classes="default"/>
						</StackPanel>
					</Button>
				</WrapPanel>
			</Grid>
		</Border>

		<!-- Track Display Container -->
		<Grid Grid.Row="1" Margin="0">
			<TextBlock Text="{Localize NoTracksFound}"
					   IsVisible="{Binding HasNoTracks}"
					   Classes="default"
					   HorizontalAlignment="Center"
					   VerticalAlignment="Center"
					   Margin="0,50"
					   Opacity="0.7"
					   FontSize="16"/>

			<!-- Floating Reorder Buttons -->
			<Border IsVisible="{Binding IsReorderMode}"
					HorizontalAlignment="Right"
					VerticalAlignment="Top"
					Margin="0,20,20,0"
					ZIndex="1000">
				<StackPanel Orientation="Horizontal"
							Spacing="10">
					<Button Command="{Binding SaveReorderedTracksCommand}"
							Classes="save"/>
					<Button Command="{Binding CancelReorderCommand}"
							Classes="cancel">
						<StackPanel Orientation="Horizontal" Spacing="5">
							<PathIcon Data="{StaticResource CloseIcon}"
									  Width="15" Height="15"
									  Foreground="Red"/>
							<TextBlock Text="{Localize Cancel}" Classes="default"/>
						</StackPanel>
					</Button>
				</StackPanel>
			</Border>

			<ScrollViewer x:Name="DetailsScrollViewer"
						  Padding="0"
						  Margin="0"
						  VerticalScrollBarVisibility="Visible"
						  HorizontalScrollBarVisibility="Disabled"
						  IsVisible="{Binding !HasNoTracks}">
				<controls:TrackDisplayControl
					x:Name="TrackControl"
					Margin="4 4 16 8"
					ItemsSource="{Binding Tracks}"
					ViewType="{Binding CurrentViewType}"/>
			</ScrollViewer>
		</Grid>

		<!-- Loading Indicator -->
		<ProgressBar Grid.RowSpan="2"
					 IsVisible="{Binding IsLoading}"
					 Value="{Binding LoadingProgress}"
					 Classes="loading"
					 VerticalAlignment="Top"/>
	</Grid>

	<!-- Styles -->
	<UserControl.Styles>

		<Style Selector="TextBlock.HeaderContentType">
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="Opacity" Value="0.7"/>
		</Style>

		<Style Selector="helpers|CustomTextBlock.HeaderTitle">
			<Setter Property="FontSize" Value="28"/>
			<Setter Property="FontWeight" Value="Bold"/>
		</Style>

		<!-- Save Button Style -->
		<Style Selector="Button.save /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource MainColor}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="CornerRadius" Value="25"/>
			<Setter Property="Content">
				<Template>
					<StackPanel Orientation="Horizontal" Spacing="5">
						<PathIcon Data="{StaticResource SaveEmptyIcon}" Classes="default"/>
						<TextBlock Text="{Localize SaveOrder}" Classes="default"/>
					</StackPanel>
				</Template>
			</Setter>
		</Style>
		<Style Selector="Button.save:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
			<Setter Property="Content">
				<Template>
					<StackPanel Orientation="Horizontal" Spacing="5">
						<PathIcon Data="{StaticResource SaveFilledIcon}" Classes="default"/>
						<TextBlock Text="{Localize SaveOrder}" Classes="default"/>
					</StackPanel>
				</Template>
			</Setter>
		</Style>

		<Style Selector="Button.cancel /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource MainColor}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="CornerRadius" Value="25"/>
		</Style>

		<Style Selector="Button.cancel:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
		</Style>

		<!-- Header Styles -->
		<Style Selector="Grid.header">
			<Setter Property="Height" Value="180"/>
			<Setter Property="Transitions">
				<Transitions>
					<DoubleTransition Property="Height" Duration="0:0:0.2"/>
				</Transitions>
			</Setter>
		</Style>

		<!-- Image Border Styles -->
		<Style Selector="Border#ImageBorder">
			<Setter Property="CornerRadius" Value="5"/>
			<Setter Property="Margin" Value="10 0 10 5"/>
			<Setter Property="Height" Value="160"/>
			<Setter Property="Width" Value="160"/>
			<Setter Property="ClipToBounds" Value="True"/>
			<Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
			<Setter Property="BorderThickness" Value="3"/>
		</Style>
		<Style Selector="Border#ImageBorder.RoundImageBorder">
			<Setter Property="CornerRadius" Value="100"/>
		</Style>
	</UserControl.Styles>
</UserControl>